// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a Yandex Resource Manager Folder. For more information, see
// [the official documentation](https://cloud.yandex.com/docs/resource-manager/concepts/resources-hierarchy#folder).
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		myFolder1, err := yandex.LookupResourcemanagerFolder(ctx, &GetResourcemanagerFolderArgs{
// 			FolderId: pulumi.StringRef("folder_id_number_1"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		myFolder2, err := yandex.LookupResourcemanagerFolder(ctx, &GetResourcemanagerFolderArgs{
// 			CloudId: pulumi.StringRef("some_cloud_id"),
// 			Name:    pulumi.StringRef("folder_name"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("myFolder1Name", myFolder1.Name)
// 		ctx.Export("myFolder2CloudId", myFolder2.CloudId)
// 		return nil
// 	})
// }
// ```
func LookupResourcemanagerFolder(ctx *pulumi.Context, args *LookupResourcemanagerFolderArgs, opts ...pulumi.InvokeOption) (*LookupResourcemanagerFolderResult, error) {
	var rv LookupResourcemanagerFolderResult
	err := ctx.Invoke("yandex:index/getResourcemanagerFolder:getResourcemanagerFolder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourcemanagerFolder.
type LookupResourcemanagerFolderArgs struct {
	// Cloud that the resource belongs to. If value is omitted, the default provider cloud is used.
	CloudId *string `pulumi:"cloudId"`
	// ID of the folder.
	FolderId *string `pulumi:"folderId"`
	// A map of labels applied to this folder.
	Labels map[string]string `pulumi:"labels"`
	// Name of the folder.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getResourcemanagerFolder.
type LookupResourcemanagerFolderResult struct {
	// ID of the cloud that contains the folder.
	CloudId string `pulumi:"cloudId"`
	// Folder creation timestamp.
	CreatedAt string `pulumi:"createdAt"`
	// Description of the folder.
	Description string `pulumi:"description"`
	FolderId    string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A map of labels applied to this folder.
	Labels map[string]string `pulumi:"labels"`
	Name   string            `pulumi:"name"`
	// Current status of the folder.
	Status string `pulumi:"status"`
}

func LookupResourcemanagerFolderOutput(ctx *pulumi.Context, args LookupResourcemanagerFolderOutputArgs, opts ...pulumi.InvokeOption) LookupResourcemanagerFolderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourcemanagerFolderResult, error) {
			args := v.(LookupResourcemanagerFolderArgs)
			r, err := LookupResourcemanagerFolder(ctx, &args, opts...)
			var s LookupResourcemanagerFolderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResourcemanagerFolderResultOutput)
}

// A collection of arguments for invoking getResourcemanagerFolder.
type LookupResourcemanagerFolderOutputArgs struct {
	// Cloud that the resource belongs to. If value is omitted, the default provider cloud is used.
	CloudId pulumi.StringPtrInput `pulumi:"cloudId"`
	// ID of the folder.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// A map of labels applied to this folder.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the folder.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupResourcemanagerFolderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcemanagerFolderArgs)(nil)).Elem()
}

// A collection of values returned by getResourcemanagerFolder.
type LookupResourcemanagerFolderResultOutput struct{ *pulumi.OutputState }

func (LookupResourcemanagerFolderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcemanagerFolderResult)(nil)).Elem()
}

func (o LookupResourcemanagerFolderResultOutput) ToLookupResourcemanagerFolderResultOutput() LookupResourcemanagerFolderResultOutput {
	return o
}

func (o LookupResourcemanagerFolderResultOutput) ToLookupResourcemanagerFolderResultOutputWithContext(ctx context.Context) LookupResourcemanagerFolderResultOutput {
	return o
}

// ID of the cloud that contains the folder.
func (o LookupResourcemanagerFolderResultOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) string { return v.CloudId }).(pulumi.StringOutput)
}

// Folder creation timestamp.
func (o LookupResourcemanagerFolderResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the folder.
func (o LookupResourcemanagerFolderResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupResourcemanagerFolderResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourcemanagerFolderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) string { return v.Id }).(pulumi.StringOutput)
}

// A map of labels applied to this folder.
func (o LookupResourcemanagerFolderResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupResourcemanagerFolderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) string { return v.Name }).(pulumi.StringOutput)
}

// Current status of the folder.
func (o LookupResourcemanagerFolderResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcemanagerFolderResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourcemanagerFolderResultOutput{})
}
