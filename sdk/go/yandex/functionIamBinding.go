// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## yandex\_function\_iam\_binding
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewFunctionIamBinding(ctx, "function-iam", &yandex.FunctionIamBindingArgs{
// 			FunctionId: pulumi.String("your-function-id"),
// 			Members: pulumi.StringArray{
// 				pulumi.String("system:allUsers"),
// 			},
// 			Role: pulumi.String("serverless.functions.invoker"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type FunctionIamBinding struct {
	pulumi.CustomResourceState

	// The [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/) ID to apply a binding to.
	FunctionId pulumi.StringOutput `pulumi:"functionId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/functions/security/)
	Role       pulumi.StringOutput `pulumi:"role"`
	SleepAfter pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewFunctionIamBinding registers a new resource with the given unique name, arguments, and options.
func NewFunctionIamBinding(ctx *pulumi.Context,
	name string, args *FunctionIamBindingArgs, opts ...pulumi.ResourceOption) (*FunctionIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionId == nil {
		return nil, errors.New("invalid value for required argument 'FunctionId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	var resource FunctionIamBinding
	err := ctx.RegisterResource("yandex:index/functionIamBinding:FunctionIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionIamBinding gets an existing FunctionIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionIamBindingState, opts ...pulumi.ResourceOption) (*FunctionIamBinding, error) {
	var resource FunctionIamBinding
	err := ctx.ReadResource("yandex:index/functionIamBinding:FunctionIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionIamBinding resources.
type functionIamBindingState struct {
	// The [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/) ID to apply a binding to.
	FunctionId *string `pulumi:"functionId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/functions/security/)
	Role       *string `pulumi:"role"`
	SleepAfter *int    `pulumi:"sleepAfter"`
}

type FunctionIamBindingState struct {
	// The [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/) ID to apply a binding to.
	FunctionId pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/functions/security/)
	Role       pulumi.StringPtrInput
	SleepAfter pulumi.IntPtrInput
}

func (FunctionIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionIamBindingState)(nil)).Elem()
}

type functionIamBindingArgs struct {
	// The [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/) ID to apply a binding to.
	FunctionId string `pulumi:"functionId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/functions/security/)
	Role       string `pulumi:"role"`
	SleepAfter *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a FunctionIamBinding resource.
type FunctionIamBindingArgs struct {
	// The [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/) ID to apply a binding to.
	FunctionId pulumi.StringInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/functions/security/)
	Role       pulumi.StringInput
	SleepAfter pulumi.IntPtrInput
}

func (FunctionIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionIamBindingArgs)(nil)).Elem()
}

type FunctionIamBindingInput interface {
	pulumi.Input

	ToFunctionIamBindingOutput() FunctionIamBindingOutput
	ToFunctionIamBindingOutputWithContext(ctx context.Context) FunctionIamBindingOutput
}

func (*FunctionIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamBinding)(nil)).Elem()
}

func (i *FunctionIamBinding) ToFunctionIamBindingOutput() FunctionIamBindingOutput {
	return i.ToFunctionIamBindingOutputWithContext(context.Background())
}

func (i *FunctionIamBinding) ToFunctionIamBindingOutputWithContext(ctx context.Context) FunctionIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingOutput)
}

// FunctionIamBindingArrayInput is an input type that accepts FunctionIamBindingArray and FunctionIamBindingArrayOutput values.
// You can construct a concrete instance of `FunctionIamBindingArrayInput` via:
//
//          FunctionIamBindingArray{ FunctionIamBindingArgs{...} }
type FunctionIamBindingArrayInput interface {
	pulumi.Input

	ToFunctionIamBindingArrayOutput() FunctionIamBindingArrayOutput
	ToFunctionIamBindingArrayOutputWithContext(context.Context) FunctionIamBindingArrayOutput
}

type FunctionIamBindingArray []FunctionIamBindingInput

func (FunctionIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionIamBinding)(nil)).Elem()
}

func (i FunctionIamBindingArray) ToFunctionIamBindingArrayOutput() FunctionIamBindingArrayOutput {
	return i.ToFunctionIamBindingArrayOutputWithContext(context.Background())
}

func (i FunctionIamBindingArray) ToFunctionIamBindingArrayOutputWithContext(ctx context.Context) FunctionIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingArrayOutput)
}

// FunctionIamBindingMapInput is an input type that accepts FunctionIamBindingMap and FunctionIamBindingMapOutput values.
// You can construct a concrete instance of `FunctionIamBindingMapInput` via:
//
//          FunctionIamBindingMap{ "key": FunctionIamBindingArgs{...} }
type FunctionIamBindingMapInput interface {
	pulumi.Input

	ToFunctionIamBindingMapOutput() FunctionIamBindingMapOutput
	ToFunctionIamBindingMapOutputWithContext(context.Context) FunctionIamBindingMapOutput
}

type FunctionIamBindingMap map[string]FunctionIamBindingInput

func (FunctionIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionIamBinding)(nil)).Elem()
}

func (i FunctionIamBindingMap) ToFunctionIamBindingMapOutput() FunctionIamBindingMapOutput {
	return i.ToFunctionIamBindingMapOutputWithContext(context.Background())
}

func (i FunctionIamBindingMap) ToFunctionIamBindingMapOutputWithContext(ctx context.Context) FunctionIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingMapOutput)
}

type FunctionIamBindingOutput struct{ *pulumi.OutputState }

func (FunctionIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamBinding)(nil)).Elem()
}

func (o FunctionIamBindingOutput) ToFunctionIamBindingOutput() FunctionIamBindingOutput {
	return o
}

func (o FunctionIamBindingOutput) ToFunctionIamBindingOutputWithContext(ctx context.Context) FunctionIamBindingOutput {
	return o
}

type FunctionIamBindingArrayOutput struct{ *pulumi.OutputState }

func (FunctionIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionIamBinding)(nil)).Elem()
}

func (o FunctionIamBindingArrayOutput) ToFunctionIamBindingArrayOutput() FunctionIamBindingArrayOutput {
	return o
}

func (o FunctionIamBindingArrayOutput) ToFunctionIamBindingArrayOutputWithContext(ctx context.Context) FunctionIamBindingArrayOutput {
	return o
}

func (o FunctionIamBindingArrayOutput) Index(i pulumi.IntInput) FunctionIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FunctionIamBinding {
		return vs[0].([]*FunctionIamBinding)[vs[1].(int)]
	}).(FunctionIamBindingOutput)
}

type FunctionIamBindingMapOutput struct{ *pulumi.OutputState }

func (FunctionIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionIamBinding)(nil)).Elem()
}

func (o FunctionIamBindingMapOutput) ToFunctionIamBindingMapOutput() FunctionIamBindingMapOutput {
	return o
}

func (o FunctionIamBindingMapOutput) ToFunctionIamBindingMapOutputWithContext(ctx context.Context) FunctionIamBindingMapOutput {
	return o
}

func (o FunctionIamBindingMapOutput) MapIndex(k pulumi.StringInput) FunctionIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FunctionIamBinding {
		return vs[0].(map[string]*FunctionIamBinding)[vs[1].(string)]
	}).(FunctionIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionIamBindingInput)(nil)).Elem(), &FunctionIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionIamBindingArrayInput)(nil)).Elem(), FunctionIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionIamBindingMapInput)(nil)).Elem(), FunctionIamBindingMap{})
	pulumi.RegisterOutputType(FunctionIamBindingOutput{})
	pulumi.RegisterOutputType(FunctionIamBindingArrayOutput{})
	pulumi.RegisterOutputType(FunctionIamBindingMapOutput{})
}
