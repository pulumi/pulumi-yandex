// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows management of [Yandex Cloud Function Scaling Policies](https://cloud.yandex.com/docs/functions/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewFunctionScalingPolicy(ctx, "myScalingPolicy", &yandex.FunctionScalingPolicyArgs{
// 			FunctionId: pulumi.String("are1samplefunction11"),
// 			Policies: FunctionScalingPolicyPolicyArray{
// 				&FunctionScalingPolicyPolicyArgs{
// 					Tag:                pulumi.String(fmt.Sprintf("%v%v", "$", "latest")),
// 					ZoneInstancesLimit: pulumi.Int(3),
// 					ZoneRequestsLimit:  pulumi.Int(100),
// 				},
// 				&FunctionScalingPolicyPolicyArgs{
// 					Tag:                pulumi.String("my_tag"),
// 					ZoneInstancesLimit: pulumi.Int(4),
// 					ZoneRequestsLimit:  pulumi.Int(150),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type FunctionScalingPolicy struct {
	pulumi.CustomResourceState

	// Yandex Cloud Function id used to define function
	FunctionId pulumi.StringOutput `pulumi:"functionId"`
	// list definition for Yandex Cloud Function scaling policies
	// * `policy.#` - number of Yandex Cloud Function scaling policies
	// * `policy.{num}.tag` - Yandex.Cloud Function version tag for Yandex Cloud Function scaling policy
	// * `policy.{num}.zone_instances_limit` - max number of instances in one zone for Yandex.Cloud Function with tag
	// * `policy.{num}.zone_requests_limit` - max number of requests in one zone for Yandex.Cloud Function with tag
	Policies FunctionScalingPolicyPolicyArrayOutput `pulumi:"policies"`
}

// NewFunctionScalingPolicy registers a new resource with the given unique name, arguments, and options.
func NewFunctionScalingPolicy(ctx *pulumi.Context,
	name string, args *FunctionScalingPolicyArgs, opts ...pulumi.ResourceOption) (*FunctionScalingPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionId == nil {
		return nil, errors.New("invalid value for required argument 'FunctionId'")
	}
	var resource FunctionScalingPolicy
	err := ctx.RegisterResource("yandex:index/functionScalingPolicy:FunctionScalingPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionScalingPolicy gets an existing FunctionScalingPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionScalingPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionScalingPolicyState, opts ...pulumi.ResourceOption) (*FunctionScalingPolicy, error) {
	var resource FunctionScalingPolicy
	err := ctx.ReadResource("yandex:index/functionScalingPolicy:FunctionScalingPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionScalingPolicy resources.
type functionScalingPolicyState struct {
	// Yandex Cloud Function id used to define function
	FunctionId *string `pulumi:"functionId"`
	// list definition for Yandex Cloud Function scaling policies
	// * `policy.#` - number of Yandex Cloud Function scaling policies
	// * `policy.{num}.tag` - Yandex.Cloud Function version tag for Yandex Cloud Function scaling policy
	// * `policy.{num}.zone_instances_limit` - max number of instances in one zone for Yandex.Cloud Function with tag
	// * `policy.{num}.zone_requests_limit` - max number of requests in one zone for Yandex.Cloud Function with tag
	Policies []FunctionScalingPolicyPolicy `pulumi:"policies"`
}

type FunctionScalingPolicyState struct {
	// Yandex Cloud Function id used to define function
	FunctionId pulumi.StringPtrInput
	// list definition for Yandex Cloud Function scaling policies
	// * `policy.#` - number of Yandex Cloud Function scaling policies
	// * `policy.{num}.tag` - Yandex.Cloud Function version tag for Yandex Cloud Function scaling policy
	// * `policy.{num}.zone_instances_limit` - max number of instances in one zone for Yandex.Cloud Function with tag
	// * `policy.{num}.zone_requests_limit` - max number of requests in one zone for Yandex.Cloud Function with tag
	Policies FunctionScalingPolicyPolicyArrayInput
}

func (FunctionScalingPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionScalingPolicyState)(nil)).Elem()
}

type functionScalingPolicyArgs struct {
	// Yandex Cloud Function id used to define function
	FunctionId string `pulumi:"functionId"`
	// list definition for Yandex Cloud Function scaling policies
	// * `policy.#` - number of Yandex Cloud Function scaling policies
	// * `policy.{num}.tag` - Yandex.Cloud Function version tag for Yandex Cloud Function scaling policy
	// * `policy.{num}.zone_instances_limit` - max number of instances in one zone for Yandex.Cloud Function with tag
	// * `policy.{num}.zone_requests_limit` - max number of requests in one zone for Yandex.Cloud Function with tag
	Policies []FunctionScalingPolicyPolicy `pulumi:"policies"`
}

// The set of arguments for constructing a FunctionScalingPolicy resource.
type FunctionScalingPolicyArgs struct {
	// Yandex Cloud Function id used to define function
	FunctionId pulumi.StringInput
	// list definition for Yandex Cloud Function scaling policies
	// * `policy.#` - number of Yandex Cloud Function scaling policies
	// * `policy.{num}.tag` - Yandex.Cloud Function version tag for Yandex Cloud Function scaling policy
	// * `policy.{num}.zone_instances_limit` - max number of instances in one zone for Yandex.Cloud Function with tag
	// * `policy.{num}.zone_requests_limit` - max number of requests in one zone for Yandex.Cloud Function with tag
	Policies FunctionScalingPolicyPolicyArrayInput
}

func (FunctionScalingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionScalingPolicyArgs)(nil)).Elem()
}

type FunctionScalingPolicyInput interface {
	pulumi.Input

	ToFunctionScalingPolicyOutput() FunctionScalingPolicyOutput
	ToFunctionScalingPolicyOutputWithContext(ctx context.Context) FunctionScalingPolicyOutput
}

func (*FunctionScalingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionScalingPolicy)(nil)).Elem()
}

func (i *FunctionScalingPolicy) ToFunctionScalingPolicyOutput() FunctionScalingPolicyOutput {
	return i.ToFunctionScalingPolicyOutputWithContext(context.Background())
}

func (i *FunctionScalingPolicy) ToFunctionScalingPolicyOutputWithContext(ctx context.Context) FunctionScalingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionScalingPolicyOutput)
}

// FunctionScalingPolicyArrayInput is an input type that accepts FunctionScalingPolicyArray and FunctionScalingPolicyArrayOutput values.
// You can construct a concrete instance of `FunctionScalingPolicyArrayInput` via:
//
//          FunctionScalingPolicyArray{ FunctionScalingPolicyArgs{...} }
type FunctionScalingPolicyArrayInput interface {
	pulumi.Input

	ToFunctionScalingPolicyArrayOutput() FunctionScalingPolicyArrayOutput
	ToFunctionScalingPolicyArrayOutputWithContext(context.Context) FunctionScalingPolicyArrayOutput
}

type FunctionScalingPolicyArray []FunctionScalingPolicyInput

func (FunctionScalingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionScalingPolicy)(nil)).Elem()
}

func (i FunctionScalingPolicyArray) ToFunctionScalingPolicyArrayOutput() FunctionScalingPolicyArrayOutput {
	return i.ToFunctionScalingPolicyArrayOutputWithContext(context.Background())
}

func (i FunctionScalingPolicyArray) ToFunctionScalingPolicyArrayOutputWithContext(ctx context.Context) FunctionScalingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionScalingPolicyArrayOutput)
}

// FunctionScalingPolicyMapInput is an input type that accepts FunctionScalingPolicyMap and FunctionScalingPolicyMapOutput values.
// You can construct a concrete instance of `FunctionScalingPolicyMapInput` via:
//
//          FunctionScalingPolicyMap{ "key": FunctionScalingPolicyArgs{...} }
type FunctionScalingPolicyMapInput interface {
	pulumi.Input

	ToFunctionScalingPolicyMapOutput() FunctionScalingPolicyMapOutput
	ToFunctionScalingPolicyMapOutputWithContext(context.Context) FunctionScalingPolicyMapOutput
}

type FunctionScalingPolicyMap map[string]FunctionScalingPolicyInput

func (FunctionScalingPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionScalingPolicy)(nil)).Elem()
}

func (i FunctionScalingPolicyMap) ToFunctionScalingPolicyMapOutput() FunctionScalingPolicyMapOutput {
	return i.ToFunctionScalingPolicyMapOutputWithContext(context.Background())
}

func (i FunctionScalingPolicyMap) ToFunctionScalingPolicyMapOutputWithContext(ctx context.Context) FunctionScalingPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionScalingPolicyMapOutput)
}

type FunctionScalingPolicyOutput struct{ *pulumi.OutputState }

func (FunctionScalingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionScalingPolicy)(nil)).Elem()
}

func (o FunctionScalingPolicyOutput) ToFunctionScalingPolicyOutput() FunctionScalingPolicyOutput {
	return o
}

func (o FunctionScalingPolicyOutput) ToFunctionScalingPolicyOutputWithContext(ctx context.Context) FunctionScalingPolicyOutput {
	return o
}

type FunctionScalingPolicyArrayOutput struct{ *pulumi.OutputState }

func (FunctionScalingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionScalingPolicy)(nil)).Elem()
}

func (o FunctionScalingPolicyArrayOutput) ToFunctionScalingPolicyArrayOutput() FunctionScalingPolicyArrayOutput {
	return o
}

func (o FunctionScalingPolicyArrayOutput) ToFunctionScalingPolicyArrayOutputWithContext(ctx context.Context) FunctionScalingPolicyArrayOutput {
	return o
}

func (o FunctionScalingPolicyArrayOutput) Index(i pulumi.IntInput) FunctionScalingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FunctionScalingPolicy {
		return vs[0].([]*FunctionScalingPolicy)[vs[1].(int)]
	}).(FunctionScalingPolicyOutput)
}

type FunctionScalingPolicyMapOutput struct{ *pulumi.OutputState }

func (FunctionScalingPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionScalingPolicy)(nil)).Elem()
}

func (o FunctionScalingPolicyMapOutput) ToFunctionScalingPolicyMapOutput() FunctionScalingPolicyMapOutput {
	return o
}

func (o FunctionScalingPolicyMapOutput) ToFunctionScalingPolicyMapOutputWithContext(ctx context.Context) FunctionScalingPolicyMapOutput {
	return o
}

func (o FunctionScalingPolicyMapOutput) MapIndex(k pulumi.StringInput) FunctionScalingPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FunctionScalingPolicy {
		return vs[0].(map[string]*FunctionScalingPolicy)[vs[1].(string)]
	}).(FunctionScalingPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionScalingPolicyInput)(nil)).Elem(), &FunctionScalingPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionScalingPolicyArrayInput)(nil)).Elem(), FunctionScalingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionScalingPolicyMapInput)(nil)).Elem(), FunctionScalingPolicyMap{})
	pulumi.RegisterOutputType(FunctionScalingPolicyOutput{})
	pulumi.RegisterOutputType(FunctionScalingPolicyArrayOutput{})
	pulumi.RegisterOutputType(FunctionScalingPolicyMapOutput{})
}
