// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a Yandex Kubernetes Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewKubernetesCluster(ctx, "zonalClusterResourceName", &yandex.KubernetesClusterArgs{
// 			Description: pulumi.String("description"),
// 			KmsProvider: &KubernetesClusterKmsProviderArgs{
// 				KeyId: pulumi.Any(yandex_kms_symmetric_key.Kms_key_resource_name.Id),
// 			},
// 			Labels: pulumi.StringMap{
// 				"my_key":       pulumi.String("my_value"),
// 				"my_other_key": pulumi.String("my_other_value"),
// 			},
// 			Master: &KubernetesClusterMasterArgs{
// 				MaintenancePolicy: &KubernetesClusterMasterMaintenancePolicyArgs{
// 					AutoUpgrade: pulumi.Bool(true),
// 					MaintenanceWindow: []map[string]interface{}{
// 						map[string]interface{}{
// 							"duration":  "3h",
// 							"startTime": "15:00",
// 						},
// 					},
// 				},
// 				PublicIp: pulumi.Bool(true),
// 				SecurityGroupIds: pulumi.StringArray{
// 					pulumi.Any(yandex_vpc_security_group.Security_group_name.Id),
// 				},
// 				Version: pulumi.String("1.17"),
// 				Zonal: &KubernetesClusterMasterZonalArgs{
// 					SubnetId: pulumi.Any(yandex_vpc_subnet.Subnet_resource_name.Id),
// 					Zone:     pulumi.Any(yandex_vpc_subnet.Subnet_resource_name.Zone),
// 				},
// 			},
// 			NetworkId:             pulumi.Any(yandex_vpc_network.Network_resource_name.Id),
// 			NetworkPolicyProvider: pulumi.String("CALICO"),
// 			NodeServiceAccountId:  pulumi.Any(yandex_iam_service_account.Node_service_account_resource_name.Id),
// 			ReleaseChannel:        pulumi.String("RAPID"),
// 			ServiceAccountId:      pulumi.Any(yandex_iam_service_account.Service_account_resource_name.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewKubernetesCluster(ctx, "regionalClusterResourceName", &yandex.KubernetesClusterArgs{
// 			Description: pulumi.String("description"),
// 			Labels: pulumi.StringMap{
// 				"my_key":       pulumi.String("my_value"),
// 				"my_other_key": pulumi.String("my_other_value"),
// 			},
// 			Master: &KubernetesClusterMasterArgs{
// 				MaintenancePolicy: &KubernetesClusterMasterMaintenancePolicyArgs{
// 					AutoUpgrade: pulumi.Bool(true),
// 					MaintenanceWindow: []map[string]interface{}{
// 						map[string]interface{}{
// 							"day":       "monday",
// 							"duration":  "3h",
// 							"startTime": "15:00",
// 						},
// 						map[string]interface{}{
// 							"day":       "friday",
// 							"duration":  "4h30m",
// 							"startTime": "10:00",
// 						},
// 					},
// 				},
// 				PublicIp: pulumi.Bool(true),
// 				Regional: &KubernetesClusterMasterRegionalArgs{
// 					Location: []map[string]interface{}{
// 						map[string]interface{}{
// 							"subnetId": yandex_vpc_subnet.Subnet_a_resource_name.Id,
// 							"zone":     yandex_vpc_subnet.Subnet_a_resource_name.Zone,
// 						},
// 						map[string]interface{}{
// 							"subnetId": yandex_vpc_subnet.Subnet_b_resource_name.Id,
// 							"zone":     yandex_vpc_subnet.Subnet_b_resource_name.Zone,
// 						},
// 						map[string]interface{}{
// 							"subnetId": yandex_vpc_subnet.Subnet_c_resource_name.Id,
// 							"zone":     yandex_vpc_subnet.Subnet_c_resource_name.Zone,
// 						},
// 					},
// 					Region: pulumi.String("ru-central1"),
// 				},
// 				Version: pulumi.String("1.14"),
// 			},
// 			NetworkId:            pulumi.Any(yandex_vpc_network.Network_resource_name.Id),
// 			NodeServiceAccountId: pulumi.Any(yandex_iam_service_account.Node_service_account_resource_name.Id),
// 			ReleaseChannel:       pulumi.String("STABLE"),
// 			ServiceAccountId:     pulumi.Any(yandex_iam_service_account.Service_account_resource_name.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// A Managed Kubernetes cluster can be imported using the `id` of the resource, e.g.
//
// ```sh
//  $ pulumi import yandex:index/kubernetesCluster:KubernetesCluster default cluster_id
// ```
type KubernetesCluster struct {
	pulumi.CustomResourceState

	// CIDR block. IP range for allocating pod addresses.
	// It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be
	// set up for this CIDR blocks in node subnets.
	ClusterIpv4Range pulumi.StringOutput `pulumi:"clusterIpv4Range"`
	// Identical to clusterIpv4Range but for IPv6 protocol.
	ClusterIpv6Range pulumi.StringOutput `pulumi:"clusterIpv6Range"`
	// (Computed) The Kubernetes cluster creation timestamp.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A description of the Kubernetes cluster.
	Description pulumi.StringOutput `pulumi:"description"`
	// The ID of the folder that the Kubernetes cluster belongs to.
	// If it is not provided, the default provider folder is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// (Computed) Health of the Kubernetes cluster.
	Health pulumi.StringOutput `pulumi:"health"`
	// cluster KMS provider parameters.
	KmsProvider KubernetesClusterKmsProviderPtrOutput `pulumi:"kmsProvider"`
	// A set of key/value label pairs to assign to the Kubernetes cluster.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Log group where cluster stores cluster system logs, like audit, events, or controlplane logs.
	LogGroupId pulumi.StringOutput `pulumi:"logGroupId"`
	// Kubernetes master configuration options. The structure is documented below.
	Master KubernetesClusterMasterOutput `pulumi:"master"`
	// Name of a specific Kubernetes cluster.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the cluster network.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// (Optional) Network Implementation options. The structure is documented below.
	NetworkImplementation KubernetesClusterNetworkImplementationPtrOutput `pulumi:"networkImplementation"`
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider pulumi.StringPtrOutput `pulumi:"networkPolicyProvider"`
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.
	NodeIpv4CidrMaskSize pulumi.IntPtrOutput `pulumi:"nodeIpv4CidrMaskSize"`
	// Service account to be used by the worker nodes of the Kubernetes cluster
	// to access Container Registry or to push node logs and metrics.
	NodeServiceAccountId pulumi.StringOutput `pulumi:"nodeServiceAccountId"`
	// Cluster release channel.
	ReleaseChannel pulumi.StringOutput `pulumi:"releaseChannel"`
	// Service account to be used for provisioning Compute Cloud and VPC resources
	// for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes
	// cluster will be located and on the folder where selected network resides.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	// CIDR block. IP range Kubernetes service Kubernetes cluster
	// IP addresses will be allocated from. It should not overlap with any subnet in the network
	// the Kubernetes cluster located in.
	ServiceIpv4Range pulumi.StringOutput `pulumi:"serviceIpv4Range"`
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range pulumi.StringOutput `pulumi:"serviceIpv6Range"`
	// (Computed)Status of the Kubernetes cluster.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewKubernetesCluster registers a new resource with the given unique name, arguments, and options.
func NewKubernetesCluster(ctx *pulumi.Context,
	name string, args *KubernetesClusterArgs, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Master == nil {
		return nil, errors.New("invalid value for required argument 'Master'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.NodeServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'NodeServiceAccountId'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	var resource KubernetesCluster
	err := ctx.RegisterResource("yandex:index/kubernetesCluster:KubernetesCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesCluster gets an existing KubernetesCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterState, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	var resource KubernetesCluster
	err := ctx.ReadResource("yandex:index/kubernetesCluster:KubernetesCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesCluster resources.
type kubernetesClusterState struct {
	// CIDR block. IP range for allocating pod addresses.
	// It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be
	// set up for this CIDR blocks in node subnets.
	ClusterIpv4Range *string `pulumi:"clusterIpv4Range"`
	// Identical to clusterIpv4Range but for IPv6 protocol.
	ClusterIpv6Range *string `pulumi:"clusterIpv6Range"`
	// (Computed) The Kubernetes cluster creation timestamp.
	CreatedAt *string `pulumi:"createdAt"`
	// A description of the Kubernetes cluster.
	Description *string `pulumi:"description"`
	// The ID of the folder that the Kubernetes cluster belongs to.
	// If it is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// (Computed) Health of the Kubernetes cluster.
	Health *string `pulumi:"health"`
	// cluster KMS provider parameters.
	KmsProvider *KubernetesClusterKmsProvider `pulumi:"kmsProvider"`
	// A set of key/value label pairs to assign to the Kubernetes cluster.
	Labels map[string]string `pulumi:"labels"`
	// Log group where cluster stores cluster system logs, like audit, events, or controlplane logs.
	LogGroupId *string `pulumi:"logGroupId"`
	// Kubernetes master configuration options. The structure is documented below.
	Master *KubernetesClusterMaster `pulumi:"master"`
	// Name of a specific Kubernetes cluster.
	Name *string `pulumi:"name"`
	// The ID of the cluster network.
	NetworkId *string `pulumi:"networkId"`
	// (Optional) Network Implementation options. The structure is documented below.
	NetworkImplementation *KubernetesClusterNetworkImplementation `pulumi:"networkImplementation"`
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider *string `pulumi:"networkPolicyProvider"`
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.
	NodeIpv4CidrMaskSize *int `pulumi:"nodeIpv4CidrMaskSize"`
	// Service account to be used by the worker nodes of the Kubernetes cluster
	// to access Container Registry or to push node logs and metrics.
	NodeServiceAccountId *string `pulumi:"nodeServiceAccountId"`
	// Cluster release channel.
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Service account to be used for provisioning Compute Cloud and VPC resources
	// for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes
	// cluster will be located and on the folder where selected network resides.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// CIDR block. IP range Kubernetes service Kubernetes cluster
	// IP addresses will be allocated from. It should not overlap with any subnet in the network
	// the Kubernetes cluster located in.
	ServiceIpv4Range *string `pulumi:"serviceIpv4Range"`
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range *string `pulumi:"serviceIpv6Range"`
	// (Computed)Status of the Kubernetes cluster.
	Status *string `pulumi:"status"`
}

type KubernetesClusterState struct {
	// CIDR block. IP range for allocating pod addresses.
	// It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be
	// set up for this CIDR blocks in node subnets.
	ClusterIpv4Range pulumi.StringPtrInput
	// Identical to clusterIpv4Range but for IPv6 protocol.
	ClusterIpv6Range pulumi.StringPtrInput
	// (Computed) The Kubernetes cluster creation timestamp.
	CreatedAt pulumi.StringPtrInput
	// A description of the Kubernetes cluster.
	Description pulumi.StringPtrInput
	// The ID of the folder that the Kubernetes cluster belongs to.
	// If it is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// (Computed) Health of the Kubernetes cluster.
	Health pulumi.StringPtrInput
	// cluster KMS provider parameters.
	KmsProvider KubernetesClusterKmsProviderPtrInput
	// A set of key/value label pairs to assign to the Kubernetes cluster.
	Labels pulumi.StringMapInput
	// Log group where cluster stores cluster system logs, like audit, events, or controlplane logs.
	LogGroupId pulumi.StringPtrInput
	// Kubernetes master configuration options. The structure is documented below.
	Master KubernetesClusterMasterPtrInput
	// Name of a specific Kubernetes cluster.
	Name pulumi.StringPtrInput
	// The ID of the cluster network.
	NetworkId pulumi.StringPtrInput
	// (Optional) Network Implementation options. The structure is documented below.
	NetworkImplementation KubernetesClusterNetworkImplementationPtrInput
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider pulumi.StringPtrInput
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.
	NodeIpv4CidrMaskSize pulumi.IntPtrInput
	// Service account to be used by the worker nodes of the Kubernetes cluster
	// to access Container Registry or to push node logs and metrics.
	NodeServiceAccountId pulumi.StringPtrInput
	// Cluster release channel.
	ReleaseChannel pulumi.StringPtrInput
	// Service account to be used for provisioning Compute Cloud and VPC resources
	// for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes
	// cluster will be located and on the folder where selected network resides.
	ServiceAccountId pulumi.StringPtrInput
	// CIDR block. IP range Kubernetes service Kubernetes cluster
	// IP addresses will be allocated from. It should not overlap with any subnet in the network
	// the Kubernetes cluster located in.
	ServiceIpv4Range pulumi.StringPtrInput
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range pulumi.StringPtrInput
	// (Computed)Status of the Kubernetes cluster.
	Status pulumi.StringPtrInput
}

func (KubernetesClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterState)(nil)).Elem()
}

type kubernetesClusterArgs struct {
	// CIDR block. IP range for allocating pod addresses.
	// It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be
	// set up for this CIDR blocks in node subnets.
	ClusterIpv4Range *string `pulumi:"clusterIpv4Range"`
	// Identical to clusterIpv4Range but for IPv6 protocol.
	ClusterIpv6Range *string `pulumi:"clusterIpv6Range"`
	// A description of the Kubernetes cluster.
	Description *string `pulumi:"description"`
	// The ID of the folder that the Kubernetes cluster belongs to.
	// If it is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// cluster KMS provider parameters.
	KmsProvider *KubernetesClusterKmsProvider `pulumi:"kmsProvider"`
	// A set of key/value label pairs to assign to the Kubernetes cluster.
	Labels map[string]string `pulumi:"labels"`
	// Kubernetes master configuration options. The structure is documented below.
	Master KubernetesClusterMaster `pulumi:"master"`
	// Name of a specific Kubernetes cluster.
	Name *string `pulumi:"name"`
	// The ID of the cluster network.
	NetworkId string `pulumi:"networkId"`
	// (Optional) Network Implementation options. The structure is documented below.
	NetworkImplementation *KubernetesClusterNetworkImplementation `pulumi:"networkImplementation"`
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider *string `pulumi:"networkPolicyProvider"`
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.
	NodeIpv4CidrMaskSize *int `pulumi:"nodeIpv4CidrMaskSize"`
	// Service account to be used by the worker nodes of the Kubernetes cluster
	// to access Container Registry or to push node logs and metrics.
	NodeServiceAccountId string `pulumi:"nodeServiceAccountId"`
	// Cluster release channel.
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Service account to be used for provisioning Compute Cloud and VPC resources
	// for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes
	// cluster will be located and on the folder where selected network resides.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// CIDR block. IP range Kubernetes service Kubernetes cluster
	// IP addresses will be allocated from. It should not overlap with any subnet in the network
	// the Kubernetes cluster located in.
	ServiceIpv4Range *string `pulumi:"serviceIpv4Range"`
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range *string `pulumi:"serviceIpv6Range"`
}

// The set of arguments for constructing a KubernetesCluster resource.
type KubernetesClusterArgs struct {
	// CIDR block. IP range for allocating pod addresses.
	// It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be
	// set up for this CIDR blocks in node subnets.
	ClusterIpv4Range pulumi.StringPtrInput
	// Identical to clusterIpv4Range but for IPv6 protocol.
	ClusterIpv6Range pulumi.StringPtrInput
	// A description of the Kubernetes cluster.
	Description pulumi.StringPtrInput
	// The ID of the folder that the Kubernetes cluster belongs to.
	// If it is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// cluster KMS provider parameters.
	KmsProvider KubernetesClusterKmsProviderPtrInput
	// A set of key/value label pairs to assign to the Kubernetes cluster.
	Labels pulumi.StringMapInput
	// Kubernetes master configuration options. The structure is documented below.
	Master KubernetesClusterMasterInput
	// Name of a specific Kubernetes cluster.
	Name pulumi.StringPtrInput
	// The ID of the cluster network.
	NetworkId pulumi.StringInput
	// (Optional) Network Implementation options. The structure is documented below.
	NetworkImplementation KubernetesClusterNetworkImplementationPtrInput
	// Network policy provider for the cluster. Possible values: `CALICO`.
	NetworkPolicyProvider pulumi.StringPtrInput
	// Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.
	NodeIpv4CidrMaskSize pulumi.IntPtrInput
	// Service account to be used by the worker nodes of the Kubernetes cluster
	// to access Container Registry or to push node logs and metrics.
	NodeServiceAccountId pulumi.StringInput
	// Cluster release channel.
	ReleaseChannel pulumi.StringPtrInput
	// Service account to be used for provisioning Compute Cloud and VPC resources
	// for Kubernetes cluster. Selected service account should have `edit` role on the folder where the Kubernetes
	// cluster will be located and on the folder where selected network resides.
	ServiceAccountId pulumi.StringInput
	// CIDR block. IP range Kubernetes service Kubernetes cluster
	// IP addresses will be allocated from. It should not overlap with any subnet in the network
	// the Kubernetes cluster located in.
	ServiceIpv4Range pulumi.StringPtrInput
	// Identical to serviceIpv4Range but for IPv6 protocol.
	ServiceIpv6Range pulumi.StringPtrInput
}

func (KubernetesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterArgs)(nil)).Elem()
}

type KubernetesClusterInput interface {
	pulumi.Input

	ToKubernetesClusterOutput() KubernetesClusterOutput
	ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput
}

func (*KubernetesCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (i *KubernetesCluster) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return i.ToKubernetesClusterOutputWithContext(context.Background())
}

func (i *KubernetesCluster) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOutput)
}

// KubernetesClusterArrayInput is an input type that accepts KubernetesClusterArray and KubernetesClusterArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterArrayInput` via:
//
//          KubernetesClusterArray{ KubernetesClusterArgs{...} }
type KubernetesClusterArrayInput interface {
	pulumi.Input

	ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput
	ToKubernetesClusterArrayOutputWithContext(context.Context) KubernetesClusterArrayOutput
}

type KubernetesClusterArray []KubernetesClusterInput

func (KubernetesClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return i.ToKubernetesClusterArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterArrayOutput)
}

// KubernetesClusterMapInput is an input type that accepts KubernetesClusterMap and KubernetesClusterMapOutput values.
// You can construct a concrete instance of `KubernetesClusterMapInput` via:
//
//          KubernetesClusterMap{ "key": KubernetesClusterArgs{...} }
type KubernetesClusterMapInput interface {
	pulumi.Input

	ToKubernetesClusterMapOutput() KubernetesClusterMapOutput
	ToKubernetesClusterMapOutputWithContext(context.Context) KubernetesClusterMapOutput
}

type KubernetesClusterMap map[string]KubernetesClusterInput

func (KubernetesClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return i.ToKubernetesClusterMapOutputWithContext(context.Background())
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMapOutput)
}

type KubernetesClusterOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return o
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return o
}

type KubernetesClusterArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) Index(i pulumi.IntInput) KubernetesClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].([]*KubernetesCluster)[vs[1].(int)]
	}).(KubernetesClusterOutput)
}

type KubernetesClusterMapOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) MapIndex(k pulumi.StringInput) KubernetesClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].(map[string]*KubernetesCluster)[vs[1].(string)]
	}).(KubernetesClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInput)(nil)).Elem(), &KubernetesCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterArrayInput)(nil)).Elem(), KubernetesClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMapInput)(nil)).Elem(), KubernetesClusterMap{})
	pulumi.RegisterOutputType(KubernetesClusterOutput{})
	pulumi.RegisterOutputType(KubernetesClusterArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMapOutput{})
}
