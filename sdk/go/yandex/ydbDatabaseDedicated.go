// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Yandex Database (dedicated) resource.
// For more information, see [the official documentation](https://cloud.yandex.com/en/docs/ydb/concepts/serverless_and_dedicated).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewYdbDatabaseDedicated(ctx, "database1", &yandex.YdbDatabaseDedicatedArgs{
// 			FolderId: pulumi.Any(data.Yandex_resourcemanager_folder.Test_folder.Id),
// 			Location: &YdbDatabaseDedicatedLocationArgs{
// 				Region: &YdbDatabaseDedicatedLocationRegionArgs{
// 					Id: pulumi.String("ru-central1"),
// 				},
// 			},
// 			NetworkId:        pulumi.Any(yandex_vpc_network.My - inst - group - network.Id),
// 			ResourcePresetId: pulumi.String("medium"),
// 			ScalePolicy: &YdbDatabaseDedicatedScalePolicyArgs{
// 				FixedScale: &YdbDatabaseDedicatedScalePolicyFixedScaleArgs{
// 					Size: pulumi.Int(1),
// 				},
// 			},
// 			StorageConfig: &YdbDatabaseDedicatedStorageConfigArgs{
// 				GroupCount:    pulumi.Int(1),
// 				StorageTypeId: pulumi.String("ssd"),
// 			},
// 			SubnetIds: pulumi.StringArray{
// 				pulumi.Any(yandex_vpc_subnet.My - inst - group - subnet.Id),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type YdbDatabaseDedicated struct {
	pulumi.CustomResourceState

	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	AssignPublicIps pulumi.BoolPtrOutput `pulumi:"assignPublicIps"`
	// The Yandex Database cluster creation timestamp.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Full database path of the Yandex Database cluster.
	// Useful for SDK configuration.
	DatabasePath pulumi.StringOutput `pulumi:"databasePath"`
	// A description for the Yandex Database cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ID of the folder that the Yandex Database cluster belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the Yandex Database cluster.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Location for the Yandex Database cluster.
	// The structure is documented below.
	Location YdbDatabaseDedicatedLocationPtrOutput `pulumi:"location"`
	// Location ID for the Yandex Database cluster.
	LocationId pulumi.StringOutput `pulumi:"locationId"`
	// Name of the Yandex Database cluster.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of the network to attach the Yandex Database cluster to.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// The Yandex Database cluster preset.
	// Available presets can be obtained via `yc ydb resource-preset list` command.
	ResourcePresetId pulumi.StringOutput `pulumi:"resourcePresetId"`
	// Scaling policy for the Yandex Database cluster.
	// The structure is documented below.
	ScalePolicy YdbDatabaseDedicatedScalePolicyOutput `pulumi:"scalePolicy"`
	// Status of the Yandex Database cluster.
	Status pulumi.StringOutput `pulumi:"status"`
	// A list of storage configuration options for the Yandex Database cluster.
	// The structure is documented below.
	StorageConfig YdbDatabaseDedicatedStorageConfigOutput `pulumi:"storageConfig"`
	// List of subnet IDs to attach the Yandex Database cluster to.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
	// Whether TLS is enabled for the Yandex Database cluster.
	// Useful for SDK configuration.
	TlsEnabled pulumi.BoolOutput `pulumi:"tlsEnabled"`
	// API endpoint of the Yandex Database cluster.
	// Useful for SDK configuration.
	YdbApiEndpoint pulumi.StringOutput `pulumi:"ydbApiEndpoint"`
	// Full endpoint of the Yandex Database cluster.
	YdbFullEndpoint pulumi.StringOutput `pulumi:"ydbFullEndpoint"`
}

// NewYdbDatabaseDedicated registers a new resource with the given unique name, arguments, and options.
func NewYdbDatabaseDedicated(ctx *pulumi.Context,
	name string, args *YdbDatabaseDedicatedArgs, opts ...pulumi.ResourceOption) (*YdbDatabaseDedicated, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.ResourcePresetId == nil {
		return nil, errors.New("invalid value for required argument 'ResourcePresetId'")
	}
	if args.ScalePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ScalePolicy'")
	}
	if args.StorageConfig == nil {
		return nil, errors.New("invalid value for required argument 'StorageConfig'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	var resource YdbDatabaseDedicated
	err := ctx.RegisterResource("yandex:index/ydbDatabaseDedicated:YdbDatabaseDedicated", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetYdbDatabaseDedicated gets an existing YdbDatabaseDedicated resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetYdbDatabaseDedicated(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *YdbDatabaseDedicatedState, opts ...pulumi.ResourceOption) (*YdbDatabaseDedicated, error) {
	var resource YdbDatabaseDedicated
	err := ctx.ReadResource("yandex:index/ydbDatabaseDedicated:YdbDatabaseDedicated", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering YdbDatabaseDedicated resources.
type ydbDatabaseDedicatedState struct {
	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	AssignPublicIps *bool `pulumi:"assignPublicIps"`
	// The Yandex Database cluster creation timestamp.
	CreatedAt *string `pulumi:"createdAt"`
	// Full database path of the Yandex Database cluster.
	// Useful for SDK configuration.
	DatabasePath *string `pulumi:"databasePath"`
	// A description for the Yandex Database cluster.
	Description *string `pulumi:"description"`
	// ID of the folder that the Yandex Database cluster belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the Yandex Database cluster.
	Labels map[string]string `pulumi:"labels"`
	// Location for the Yandex Database cluster.
	// The structure is documented below.
	Location *YdbDatabaseDedicatedLocation `pulumi:"location"`
	// Location ID for the Yandex Database cluster.
	LocationId *string `pulumi:"locationId"`
	// Name of the Yandex Database cluster.
	Name *string `pulumi:"name"`
	// ID of the network to attach the Yandex Database cluster to.
	NetworkId *string `pulumi:"networkId"`
	// The Yandex Database cluster preset.
	// Available presets can be obtained via `yc ydb resource-preset list` command.
	ResourcePresetId *string `pulumi:"resourcePresetId"`
	// Scaling policy for the Yandex Database cluster.
	// The structure is documented below.
	ScalePolicy *YdbDatabaseDedicatedScalePolicy `pulumi:"scalePolicy"`
	// Status of the Yandex Database cluster.
	Status *string `pulumi:"status"`
	// A list of storage configuration options for the Yandex Database cluster.
	// The structure is documented below.
	StorageConfig *YdbDatabaseDedicatedStorageConfig `pulumi:"storageConfig"`
	// List of subnet IDs to attach the Yandex Database cluster to.
	SubnetIds []string `pulumi:"subnetIds"`
	// Whether TLS is enabled for the Yandex Database cluster.
	// Useful for SDK configuration.
	TlsEnabled *bool `pulumi:"tlsEnabled"`
	// API endpoint of the Yandex Database cluster.
	// Useful for SDK configuration.
	YdbApiEndpoint *string `pulumi:"ydbApiEndpoint"`
	// Full endpoint of the Yandex Database cluster.
	YdbFullEndpoint *string `pulumi:"ydbFullEndpoint"`
}

type YdbDatabaseDedicatedState struct {
	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	AssignPublicIps pulumi.BoolPtrInput
	// The Yandex Database cluster creation timestamp.
	CreatedAt pulumi.StringPtrInput
	// Full database path of the Yandex Database cluster.
	// Useful for SDK configuration.
	DatabasePath pulumi.StringPtrInput
	// A description for the Yandex Database cluster.
	Description pulumi.StringPtrInput
	// ID of the folder that the Yandex Database cluster belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the Yandex Database cluster.
	Labels pulumi.StringMapInput
	// Location for the Yandex Database cluster.
	// The structure is documented below.
	Location YdbDatabaseDedicatedLocationPtrInput
	// Location ID for the Yandex Database cluster.
	LocationId pulumi.StringPtrInput
	// Name of the Yandex Database cluster.
	Name pulumi.StringPtrInput
	// ID of the network to attach the Yandex Database cluster to.
	NetworkId pulumi.StringPtrInput
	// The Yandex Database cluster preset.
	// Available presets can be obtained via `yc ydb resource-preset list` command.
	ResourcePresetId pulumi.StringPtrInput
	// Scaling policy for the Yandex Database cluster.
	// The structure is documented below.
	ScalePolicy YdbDatabaseDedicatedScalePolicyPtrInput
	// Status of the Yandex Database cluster.
	Status pulumi.StringPtrInput
	// A list of storage configuration options for the Yandex Database cluster.
	// The structure is documented below.
	StorageConfig YdbDatabaseDedicatedStorageConfigPtrInput
	// List of subnet IDs to attach the Yandex Database cluster to.
	SubnetIds pulumi.StringArrayInput
	// Whether TLS is enabled for the Yandex Database cluster.
	// Useful for SDK configuration.
	TlsEnabled pulumi.BoolPtrInput
	// API endpoint of the Yandex Database cluster.
	// Useful for SDK configuration.
	YdbApiEndpoint pulumi.StringPtrInput
	// Full endpoint of the Yandex Database cluster.
	YdbFullEndpoint pulumi.StringPtrInput
}

func (YdbDatabaseDedicatedState) ElementType() reflect.Type {
	return reflect.TypeOf((*ydbDatabaseDedicatedState)(nil)).Elem()
}

type ydbDatabaseDedicatedArgs struct {
	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	AssignPublicIps *bool `pulumi:"assignPublicIps"`
	// A description for the Yandex Database cluster.
	Description *string `pulumi:"description"`
	// ID of the folder that the Yandex Database cluster belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the Yandex Database cluster.
	Labels map[string]string `pulumi:"labels"`
	// Location for the Yandex Database cluster.
	// The structure is documented below.
	Location *YdbDatabaseDedicatedLocation `pulumi:"location"`
	// Location ID for the Yandex Database cluster.
	LocationId *string `pulumi:"locationId"`
	// Name of the Yandex Database cluster.
	Name *string `pulumi:"name"`
	// ID of the network to attach the Yandex Database cluster to.
	NetworkId string `pulumi:"networkId"`
	// The Yandex Database cluster preset.
	// Available presets can be obtained via `yc ydb resource-preset list` command.
	ResourcePresetId string `pulumi:"resourcePresetId"`
	// Scaling policy for the Yandex Database cluster.
	// The structure is documented below.
	ScalePolicy YdbDatabaseDedicatedScalePolicy `pulumi:"scalePolicy"`
	// A list of storage configuration options for the Yandex Database cluster.
	// The structure is documented below.
	StorageConfig YdbDatabaseDedicatedStorageConfig `pulumi:"storageConfig"`
	// List of subnet IDs to attach the Yandex Database cluster to.
	SubnetIds []string `pulumi:"subnetIds"`
}

// The set of arguments for constructing a YdbDatabaseDedicated resource.
type YdbDatabaseDedicatedArgs struct {
	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	AssignPublicIps pulumi.BoolPtrInput
	// A description for the Yandex Database cluster.
	Description pulumi.StringPtrInput
	// ID of the folder that the Yandex Database cluster belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the Yandex Database cluster.
	Labels pulumi.StringMapInput
	// Location for the Yandex Database cluster.
	// The structure is documented below.
	Location YdbDatabaseDedicatedLocationPtrInput
	// Location ID for the Yandex Database cluster.
	LocationId pulumi.StringPtrInput
	// Name of the Yandex Database cluster.
	Name pulumi.StringPtrInput
	// ID of the network to attach the Yandex Database cluster to.
	NetworkId pulumi.StringInput
	// The Yandex Database cluster preset.
	// Available presets can be obtained via `yc ydb resource-preset list` command.
	ResourcePresetId pulumi.StringInput
	// Scaling policy for the Yandex Database cluster.
	// The structure is documented below.
	ScalePolicy YdbDatabaseDedicatedScalePolicyInput
	// A list of storage configuration options for the Yandex Database cluster.
	// The structure is documented below.
	StorageConfig YdbDatabaseDedicatedStorageConfigInput
	// List of subnet IDs to attach the Yandex Database cluster to.
	SubnetIds pulumi.StringArrayInput
}

func (YdbDatabaseDedicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ydbDatabaseDedicatedArgs)(nil)).Elem()
}

type YdbDatabaseDedicatedInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedOutput() YdbDatabaseDedicatedOutput
	ToYdbDatabaseDedicatedOutputWithContext(ctx context.Context) YdbDatabaseDedicatedOutput
}

func (*YdbDatabaseDedicated) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicated)(nil)).Elem()
}

func (i *YdbDatabaseDedicated) ToYdbDatabaseDedicatedOutput() YdbDatabaseDedicatedOutput {
	return i.ToYdbDatabaseDedicatedOutputWithContext(context.Background())
}

func (i *YdbDatabaseDedicated) ToYdbDatabaseDedicatedOutputWithContext(ctx context.Context) YdbDatabaseDedicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedOutput)
}

// YdbDatabaseDedicatedArrayInput is an input type that accepts YdbDatabaseDedicatedArray and YdbDatabaseDedicatedArrayOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedArrayInput` via:
//
//          YdbDatabaseDedicatedArray{ YdbDatabaseDedicatedArgs{...} }
type YdbDatabaseDedicatedArrayInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedArrayOutput() YdbDatabaseDedicatedArrayOutput
	ToYdbDatabaseDedicatedArrayOutputWithContext(context.Context) YdbDatabaseDedicatedArrayOutput
}

type YdbDatabaseDedicatedArray []YdbDatabaseDedicatedInput

func (YdbDatabaseDedicatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YdbDatabaseDedicated)(nil)).Elem()
}

func (i YdbDatabaseDedicatedArray) ToYdbDatabaseDedicatedArrayOutput() YdbDatabaseDedicatedArrayOutput {
	return i.ToYdbDatabaseDedicatedArrayOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedArray) ToYdbDatabaseDedicatedArrayOutputWithContext(ctx context.Context) YdbDatabaseDedicatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedArrayOutput)
}

// YdbDatabaseDedicatedMapInput is an input type that accepts YdbDatabaseDedicatedMap and YdbDatabaseDedicatedMapOutput values.
// You can construct a concrete instance of `YdbDatabaseDedicatedMapInput` via:
//
//          YdbDatabaseDedicatedMap{ "key": YdbDatabaseDedicatedArgs{...} }
type YdbDatabaseDedicatedMapInput interface {
	pulumi.Input

	ToYdbDatabaseDedicatedMapOutput() YdbDatabaseDedicatedMapOutput
	ToYdbDatabaseDedicatedMapOutputWithContext(context.Context) YdbDatabaseDedicatedMapOutput
}

type YdbDatabaseDedicatedMap map[string]YdbDatabaseDedicatedInput

func (YdbDatabaseDedicatedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YdbDatabaseDedicated)(nil)).Elem()
}

func (i YdbDatabaseDedicatedMap) ToYdbDatabaseDedicatedMapOutput() YdbDatabaseDedicatedMapOutput {
	return i.ToYdbDatabaseDedicatedMapOutputWithContext(context.Background())
}

func (i YdbDatabaseDedicatedMap) ToYdbDatabaseDedicatedMapOutputWithContext(ctx context.Context) YdbDatabaseDedicatedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseDedicatedMapOutput)
}

type YdbDatabaseDedicatedOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseDedicated)(nil)).Elem()
}

func (o YdbDatabaseDedicatedOutput) ToYdbDatabaseDedicatedOutput() YdbDatabaseDedicatedOutput {
	return o
}

func (o YdbDatabaseDedicatedOutput) ToYdbDatabaseDedicatedOutputWithContext(ctx context.Context) YdbDatabaseDedicatedOutput {
	return o
}

type YdbDatabaseDedicatedArrayOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YdbDatabaseDedicated)(nil)).Elem()
}

func (o YdbDatabaseDedicatedArrayOutput) ToYdbDatabaseDedicatedArrayOutput() YdbDatabaseDedicatedArrayOutput {
	return o
}

func (o YdbDatabaseDedicatedArrayOutput) ToYdbDatabaseDedicatedArrayOutputWithContext(ctx context.Context) YdbDatabaseDedicatedArrayOutput {
	return o
}

func (o YdbDatabaseDedicatedArrayOutput) Index(i pulumi.IntInput) YdbDatabaseDedicatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *YdbDatabaseDedicated {
		return vs[0].([]*YdbDatabaseDedicated)[vs[1].(int)]
	}).(YdbDatabaseDedicatedOutput)
}

type YdbDatabaseDedicatedMapOutput struct{ *pulumi.OutputState }

func (YdbDatabaseDedicatedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YdbDatabaseDedicated)(nil)).Elem()
}

func (o YdbDatabaseDedicatedMapOutput) ToYdbDatabaseDedicatedMapOutput() YdbDatabaseDedicatedMapOutput {
	return o
}

func (o YdbDatabaseDedicatedMapOutput) ToYdbDatabaseDedicatedMapOutputWithContext(ctx context.Context) YdbDatabaseDedicatedMapOutput {
	return o
}

func (o YdbDatabaseDedicatedMapOutput) MapIndex(k pulumi.StringInput) YdbDatabaseDedicatedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *YdbDatabaseDedicated {
		return vs[0].(map[string]*YdbDatabaseDedicated)[vs[1].(string)]
	}).(YdbDatabaseDedicatedOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*YdbDatabaseDedicatedInput)(nil)).Elem(), &YdbDatabaseDedicated{})
	pulumi.RegisterInputType(reflect.TypeOf((*YdbDatabaseDedicatedArrayInput)(nil)).Elem(), YdbDatabaseDedicatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*YdbDatabaseDedicatedMapInput)(nil)).Elem(), YdbDatabaseDedicatedMap{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedArrayOutput{})
	pulumi.RegisterOutputType(YdbDatabaseDedicatedMapOutput{})
}
