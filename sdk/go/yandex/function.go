// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows management of [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-yandex/sdk/go/yandex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewFunction(ctx, "test-function", &yandex.FunctionArgs{
// 			Content: &FunctionContentArgs{
// 				ZipFilename: pulumi.String("function.zip"),
// 			},
// 			Description:      pulumi.String("any description"),
// 			Entrypoint:       pulumi.String("main"),
// 			ExecutionTimeout: pulumi.String("10"),
// 			Memory:           pulumi.Int(128),
// 			Runtime:          pulumi.String("python37"),
// 			ServiceAccountId: pulumi.String("are1service2account3id"),
// 			Tags: pulumi.StringArray{
// 				pulumi.String("my_tag"),
// 			},
// 			UserHash: pulumi.String("any_user_defined_string"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Function struct {
	pulumi.CustomResourceState

	// Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `content.0.zip_filename` - Filename to zip archive for the version.
	Content FunctionContentPtrOutput `pulumi:"content"`
	// Creation timestamp of the Yandex Cloud Function.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Description of the Yandex Cloud Function
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Entrypoint for Yandex Cloud Function
	Entrypoint pulumi.StringOutput `pulumi:"entrypoint"`
	// A set of key/value environment variables for Yandex Cloud Function
	Environment pulumi.StringMapOutput `pulumi:"environment"`
	// Execution timeout in seconds for Yandex Cloud Function
	ExecutionTimeout pulumi.StringPtrOutput `pulumi:"executionTimeout"`
	// Folder ID for the Yandex Cloud Function
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Image size for Yandex Cloud Function.
	ImageSize pulumi.IntOutput `pulumi:"imageSize"`
	// A set of key/value label pairs to assign to the Yandex Cloud Function
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Loggroup ID size for Yandex Cloud Function.
	LoggroupId pulumi.StringOutput `pulumi:"loggroupId"`
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Yandex Cloud Function name used to define trigger
	Name pulumi.StringOutput `pulumi:"name"`
	// Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `package.0.sha_256` - SHA256 hash of the version deployment package.
	// * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
	// * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
	Package FunctionPackagePtrOutput `pulumi:"package"`
	// Runtime for Yandex Cloud Function
	Runtime pulumi.StringOutput `pulumi:"runtime"`
	// Service account ID for Yandex Cloud Function
	ServiceAccountId pulumi.StringPtrOutput `pulumi:"serviceAccountId"`
	// Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
	UserHash pulumi.StringOutput `pulumi:"userHash"`
	// Version for Yandex Cloud Function.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOption) (*Function, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entrypoint == nil {
		return nil, errors.New("invalid value for required argument 'Entrypoint'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	if args.Runtime == nil {
		return nil, errors.New("invalid value for required argument 'Runtime'")
	}
	if args.UserHash == nil {
		return nil, errors.New("invalid value for required argument 'UserHash'")
	}
	var resource Function
	err := ctx.RegisterResource("yandex:index/function:Function", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionState, opts ...pulumi.ResourceOption) (*Function, error) {
	var resource Function
	err := ctx.ReadResource("yandex:index/function:Function", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Function resources.
type functionState struct {
	// Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `content.0.zip_filename` - Filename to zip archive for the version.
	Content *FunctionContent `pulumi:"content"`
	// Creation timestamp of the Yandex Cloud Function.
	CreatedAt *string `pulumi:"createdAt"`
	// Description of the Yandex Cloud Function
	Description *string `pulumi:"description"`
	// Entrypoint for Yandex Cloud Function
	Entrypoint *string `pulumi:"entrypoint"`
	// A set of key/value environment variables for Yandex Cloud Function
	Environment map[string]string `pulumi:"environment"`
	// Execution timeout in seconds for Yandex Cloud Function
	ExecutionTimeout *string `pulumi:"executionTimeout"`
	// Folder ID for the Yandex Cloud Function
	FolderId *string `pulumi:"folderId"`
	// Image size for Yandex Cloud Function.
	ImageSize *int `pulumi:"imageSize"`
	// A set of key/value label pairs to assign to the Yandex Cloud Function
	Labels map[string]string `pulumi:"labels"`
	// Loggroup ID size for Yandex Cloud Function.
	LoggroupId *string `pulumi:"loggroupId"`
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
	Memory *int `pulumi:"memory"`
	// Yandex Cloud Function name used to define trigger
	Name *string `pulumi:"name"`
	// Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `package.0.sha_256` - SHA256 hash of the version deployment package.
	// * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
	// * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
	Package *FunctionPackage `pulumi:"package"`
	// Runtime for Yandex Cloud Function
	Runtime *string `pulumi:"runtime"`
	// Service account ID for Yandex Cloud Function
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
	Tags []string `pulumi:"tags"`
	// User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
	UserHash *string `pulumi:"userHash"`
	// Version for Yandex Cloud Function.
	Version *string `pulumi:"version"`
}

type FunctionState struct {
	// Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `content.0.zip_filename` - Filename to zip archive for the version.
	Content FunctionContentPtrInput
	// Creation timestamp of the Yandex Cloud Function.
	CreatedAt pulumi.StringPtrInput
	// Description of the Yandex Cloud Function
	Description pulumi.StringPtrInput
	// Entrypoint for Yandex Cloud Function
	Entrypoint pulumi.StringPtrInput
	// A set of key/value environment variables for Yandex Cloud Function
	Environment pulumi.StringMapInput
	// Execution timeout in seconds for Yandex Cloud Function
	ExecutionTimeout pulumi.StringPtrInput
	// Folder ID for the Yandex Cloud Function
	FolderId pulumi.StringPtrInput
	// Image size for Yandex Cloud Function.
	ImageSize pulumi.IntPtrInput
	// A set of key/value label pairs to assign to the Yandex Cloud Function
	Labels pulumi.StringMapInput
	// Loggroup ID size for Yandex Cloud Function.
	LoggroupId pulumi.StringPtrInput
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
	Memory pulumi.IntPtrInput
	// Yandex Cloud Function name used to define trigger
	Name pulumi.StringPtrInput
	// Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `package.0.sha_256` - SHA256 hash of the version deployment package.
	// * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
	// * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
	Package FunctionPackagePtrInput
	// Runtime for Yandex Cloud Function
	Runtime pulumi.StringPtrInput
	// Service account ID for Yandex Cloud Function
	ServiceAccountId pulumi.StringPtrInput
	// Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
	Tags pulumi.StringArrayInput
	// User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
	UserHash pulumi.StringPtrInput
	// Version for Yandex Cloud Function.
	Version pulumi.StringPtrInput
}

func (FunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionState)(nil)).Elem()
}

type functionArgs struct {
	// Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `content.0.zip_filename` - Filename to zip archive for the version.
	Content *FunctionContent `pulumi:"content"`
	// Description of the Yandex Cloud Function
	Description *string `pulumi:"description"`
	// Entrypoint for Yandex Cloud Function
	Entrypoint string `pulumi:"entrypoint"`
	// A set of key/value environment variables for Yandex Cloud Function
	Environment map[string]string `pulumi:"environment"`
	// Execution timeout in seconds for Yandex Cloud Function
	ExecutionTimeout *string `pulumi:"executionTimeout"`
	// Folder ID for the Yandex Cloud Function
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the Yandex Cloud Function
	Labels map[string]string `pulumi:"labels"`
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
	Memory int `pulumi:"memory"`
	// Yandex Cloud Function name used to define trigger
	Name *string `pulumi:"name"`
	// Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `package.0.sha_256` - SHA256 hash of the version deployment package.
	// * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
	// * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
	Package *FunctionPackage `pulumi:"package"`
	// Runtime for Yandex Cloud Function
	Runtime string `pulumi:"runtime"`
	// Service account ID for Yandex Cloud Function
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
	Tags []string `pulumi:"tags"`
	// User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
	UserHash string `pulumi:"userHash"`
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// Version deployment content for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `content.0.zip_filename` - Filename to zip archive for the version.
	Content FunctionContentPtrInput
	// Description of the Yandex Cloud Function
	Description pulumi.StringPtrInput
	// Entrypoint for Yandex Cloud Function
	Entrypoint pulumi.StringInput
	// A set of key/value environment variables for Yandex Cloud Function
	Environment pulumi.StringMapInput
	// Execution timeout in seconds for Yandex Cloud Function
	ExecutionTimeout pulumi.StringPtrInput
	// Folder ID for the Yandex Cloud Function
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the Yandex Cloud Function
	Labels pulumi.StringMapInput
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
	Memory pulumi.IntInput
	// Yandex Cloud Function name used to define trigger
	Name pulumi.StringPtrInput
	// Version deployment package for Yandex Cloud Function code. Can be only one `package` or `content` section.
	// * `package.0.sha_256` - SHA256 hash of the version deployment package.
	// * `package.0.bucket_name` - Name of the bucket that stores the code for the version.
	// * `package.0.object_name` - Name of the object in the bucket that stores the code for the version.
	Package FunctionPackagePtrInput
	// Runtime for Yandex Cloud Function
	Runtime pulumi.StringInput
	// Service account ID for Yandex Cloud Function
	ServiceAccountId pulumi.StringPtrInput
	// Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
	Tags pulumi.StringArrayInput
	// User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
	UserHash pulumi.StringInput
}

func (FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionArgs)(nil)).Elem()
}

type FunctionInput interface {
	pulumi.Input

	ToFunctionOutput() FunctionOutput
	ToFunctionOutputWithContext(ctx context.Context) FunctionOutput
}

func (*Function) ElementType() reflect.Type {
	return reflect.TypeOf((**Function)(nil)).Elem()
}

func (i *Function) ToFunctionOutput() FunctionOutput {
	return i.ToFunctionOutputWithContext(context.Background())
}

func (i *Function) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutput)
}

// FunctionArrayInput is an input type that accepts FunctionArray and FunctionArrayOutput values.
// You can construct a concrete instance of `FunctionArrayInput` via:
//
//          FunctionArray{ FunctionArgs{...} }
type FunctionArrayInput interface {
	pulumi.Input

	ToFunctionArrayOutput() FunctionArrayOutput
	ToFunctionArrayOutputWithContext(context.Context) FunctionArrayOutput
}

type FunctionArray []FunctionInput

func (FunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Function)(nil)).Elem()
}

func (i FunctionArray) ToFunctionArrayOutput() FunctionArrayOutput {
	return i.ToFunctionArrayOutputWithContext(context.Background())
}

func (i FunctionArray) ToFunctionArrayOutputWithContext(ctx context.Context) FunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionArrayOutput)
}

// FunctionMapInput is an input type that accepts FunctionMap and FunctionMapOutput values.
// You can construct a concrete instance of `FunctionMapInput` via:
//
//          FunctionMap{ "key": FunctionArgs{...} }
type FunctionMapInput interface {
	pulumi.Input

	ToFunctionMapOutput() FunctionMapOutput
	ToFunctionMapOutputWithContext(context.Context) FunctionMapOutput
}

type FunctionMap map[string]FunctionInput

func (FunctionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Function)(nil)).Elem()
}

func (i FunctionMap) ToFunctionMapOutput() FunctionMapOutput {
	return i.ToFunctionMapOutputWithContext(context.Background())
}

func (i FunctionMap) ToFunctionMapOutputWithContext(ctx context.Context) FunctionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionMapOutput)
}

type FunctionOutput struct{ *pulumi.OutputState }

func (FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Function)(nil)).Elem()
}

func (o FunctionOutput) ToFunctionOutput() FunctionOutput {
	return o
}

func (o FunctionOutput) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return o
}

type FunctionArrayOutput struct{ *pulumi.OutputState }

func (FunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Function)(nil)).Elem()
}

func (o FunctionArrayOutput) ToFunctionArrayOutput() FunctionArrayOutput {
	return o
}

func (o FunctionArrayOutput) ToFunctionArrayOutputWithContext(ctx context.Context) FunctionArrayOutput {
	return o
}

func (o FunctionArrayOutput) Index(i pulumi.IntInput) FunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Function {
		return vs[0].([]*Function)[vs[1].(int)]
	}).(FunctionOutput)
}

type FunctionMapOutput struct{ *pulumi.OutputState }

func (FunctionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Function)(nil)).Elem()
}

func (o FunctionMapOutput) ToFunctionMapOutput() FunctionMapOutput {
	return o
}

func (o FunctionMapOutput) ToFunctionMapOutputWithContext(ctx context.Context) FunctionMapOutput {
	return o
}

func (o FunctionMapOutput) MapIndex(k pulumi.StringInput) FunctionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Function {
		return vs[0].(map[string]*Function)[vs[1].(string)]
	}).(FunctionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionInput)(nil)).Elem(), &Function{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionArrayInput)(nil)).Elem(), FunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionMapInput)(nil)).Elem(), FunctionMap{})
	pulumi.RegisterOutputType(FunctionOutput{})
	pulumi.RegisterOutputType(FunctionArrayOutput{})
	pulumi.RegisterOutputType(FunctionMapOutput{})
}
