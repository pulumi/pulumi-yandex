// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Yandex Database (serverless) resource. For more information, see
 *     [the official documentation](https://cloud.yandex.com/en/docs/ydb/concepts/serverless_and_dedicated).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const database1 = new yandex.YdbDatabaseServerless("database1", {
 *     folderId: yandex_resourcemanager_folder_test_folder.id,
 * });
 * ```
 */
export class YdbDatabaseServerless extends pulumi.CustomResource {
    /**
     * Get an existing YdbDatabaseServerless resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: YdbDatabaseServerlessState, opts?: pulumi.CustomResourceOptions): YdbDatabaseServerless {
        return new YdbDatabaseServerless(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/ydbDatabaseServerless:YdbDatabaseServerless';

    /**
     * Returns true if the given object is an instance of YdbDatabaseServerless.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is YdbDatabaseServerless {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === YdbDatabaseServerless.__pulumiType;
    }

    /**
     * The Yandex Database serverless cluster creation timestamp.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Full database path of the Yandex Database serverless cluster.
     * Useful for SDK configuration.
     */
    public /*out*/ readonly databasePath!: pulumi.Output<string>;
    /**
     * A description for the Yandex Database serverless cluster.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Document API endpoint of the Yandex Database serverless cluster.
     */
    public /*out*/ readonly documentApiEndpoint!: pulumi.Output<string>;
    /**
     * ID of the folder that the Yandex Database serverless cluster belongs to.
     * It will be deduced from provider configuration if not set explicitly.
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * A set of key/value label pairs to assign to the Yandex Database serverless cluster.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Location ID for the Yandex Database serverless cluster.
     */
    public readonly locationId!: pulumi.Output<string>;
    /**
     * Name for the Yandex Database serverless cluster.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Status of the Yandex Database serverless cluster.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Whether TLS is enabled for the Yandex Database serverless cluster.
     * Useful for SDK configuration.
     */
    public /*out*/ readonly tlsEnabled!: pulumi.Output<boolean>;
    /**
     * API endpoint of the Yandex Database serverless cluster.
     * Useful for SDK configuration.
     */
    public /*out*/ readonly ydbApiEndpoint!: pulumi.Output<string>;
    /**
     * Full endpoint of the Yandex Database serverless cluster.
     */
    public /*out*/ readonly ydbFullEndpoint!: pulumi.Output<string>;

    /**
     * Create a YdbDatabaseServerless resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: YdbDatabaseServerlessArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: YdbDatabaseServerlessArgs | YdbDatabaseServerlessState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as YdbDatabaseServerlessState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["databasePath"] = state ? state.databasePath : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["documentApiEndpoint"] = state ? state.documentApiEndpoint : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["locationId"] = state ? state.locationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tlsEnabled"] = state ? state.tlsEnabled : undefined;
            resourceInputs["ydbApiEndpoint"] = state ? state.ydbApiEndpoint : undefined;
            resourceInputs["ydbFullEndpoint"] = state ? state.ydbFullEndpoint : undefined;
        } else {
            const args = argsOrState as YdbDatabaseServerlessArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["locationId"] = args ? args.locationId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["databasePath"] = undefined /*out*/;
            resourceInputs["documentApiEndpoint"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tlsEnabled"] = undefined /*out*/;
            resourceInputs["ydbApiEndpoint"] = undefined /*out*/;
            resourceInputs["ydbFullEndpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(YdbDatabaseServerless.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering YdbDatabaseServerless resources.
 */
export interface YdbDatabaseServerlessState {
    /**
     * The Yandex Database serverless cluster creation timestamp.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Full database path of the Yandex Database serverless cluster.
     * Useful for SDK configuration.
     */
    databasePath?: pulumi.Input<string>;
    /**
     * A description for the Yandex Database serverless cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * Document API endpoint of the Yandex Database serverless cluster.
     */
    documentApiEndpoint?: pulumi.Input<string>;
    /**
     * ID of the folder that the Yandex Database serverless cluster belongs to.
     * It will be deduced from provider configuration if not set explicitly.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the Yandex Database serverless cluster.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location ID for the Yandex Database serverless cluster.
     */
    locationId?: pulumi.Input<string>;
    /**
     * Name for the Yandex Database serverless cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Status of the Yandex Database serverless cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * Whether TLS is enabled for the Yandex Database serverless cluster.
     * Useful for SDK configuration.
     */
    tlsEnabled?: pulumi.Input<boolean>;
    /**
     * API endpoint of the Yandex Database serverless cluster.
     * Useful for SDK configuration.
     */
    ydbApiEndpoint?: pulumi.Input<string>;
    /**
     * Full endpoint of the Yandex Database serverless cluster.
     */
    ydbFullEndpoint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a YdbDatabaseServerless resource.
 */
export interface YdbDatabaseServerlessArgs {
    /**
     * A description for the Yandex Database serverless cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the folder that the Yandex Database serverless cluster belongs to.
     * It will be deduced from provider configuration if not set explicitly.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the Yandex Database serverless cluster.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location ID for the Yandex Database serverless cluster.
     */
    locationId?: pulumi.Input<string>;
    /**
     * Name for the Yandex Database serverless cluster.
     */
    name?: pulumi.Input<string>;
}
