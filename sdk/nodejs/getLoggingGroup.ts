// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLoggingGroup(args?: GetLoggingGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingGroupResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getLoggingGroup:getLoggingGroup", {
        "folderId": args.folderId,
        "groupId": args.groupId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoggingGroup.
 */
export interface GetLoggingGroupArgs {
    folderId?: string;
    groupId?: string;
    name?: string;
}

/**
 * A collection of values returned by getLoggingGroup.
 */
export interface GetLoggingGroupResult {
    readonly cloudId: string;
    readonly createdAt: string;
    readonly description: string;
    readonly folderId: string;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly retentionPeriod: string;
    readonly status: string;
}

export function getLoggingGroupOutput(args?: GetLoggingGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoggingGroupResult> {
    return pulumi.output(args).apply(a => getLoggingGroup(a, opts))
}

/**
 * A collection of arguments for invoking getLoggingGroup.
 */
export interface GetLoggingGroupOutputArgs {
    folderId?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
