// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Container Repository. For more information, see
 * [the official documentation](https://cloud.yandex.com/docs/container-registry/concepts/repository)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const repo_1 = pulumi.output(yandex.getContainerRepository({
 *     name: "some_repository_name",
 * }));
 * const repo_2 = pulumi.output(yandex.getContainerRepository({
 *     repositoryId: "some_repository_id",
 * }));
 * ```
 */
export function getContainerRepository(args?: GetContainerRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerRepositoryResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getContainerRepository:getContainerRepository", {
        "name": args.name,
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerRepository.
 */
export interface GetContainerRepositoryArgs {
    /**
     * Name of the repository. The name of the repository should start with id of a container registry and match the name of the images in the repository.
     */
    name?: string;
    /**
     * The ID of a specific repository.
     */
    repositoryId?: string;
}

/**
 * A collection of values returned by getContainerRepository.
 */
export interface GetContainerRepositoryResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly repositoryId: string;
}

export function getContainerRepositoryOutput(args?: GetContainerRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerRepositoryResult> {
    return pulumi.output(args).apply(a => getContainerRepository(a, opts))
}

/**
 * A collection of arguments for invoking getContainerRepository.
 */
export interface GetContainerRepositoryOutputArgs {
    /**
     * Name of the repository. The name of the repository should start with id of a container registry and match the name of the images in the repository.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of a specific repository.
     */
    repositoryId?: pulumi.Input<string>;
}
