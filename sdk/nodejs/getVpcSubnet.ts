// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex VPC subnet. For more information, see
 * [Yandex.Cloud VPC](https://cloud.yandex.com/docs/vpc/concepts/index).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const admin = pulumi.output(yandex.getVpcSubnet({
 *     subnetId: "my-subnet-id",
 * }));
 * ```
 *
 * This data source is used to define [VPC Subnets] that can be used by other resources.
 */
export function getVpcSubnet(args?: GetVpcSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcSubnetResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getVpcSubnet:getVpcSubnet", {
        "folderId": args.folderId,
        "name": args.name,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcSubnet.
 */
export interface GetVpcSubnetArgs {
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: string;
    /**
     * - Name of the subnet.
     */
    name?: string;
    /**
     * Subnet ID.
     */
    subnetId?: string;
}

/**
 * A collection of values returned by getVpcSubnet.
 */
export interface GetVpcSubnetResult {
    /**
     * Creation timestamp of this subnet.
     */
    readonly createdAt: string;
    /**
     * Description of the subnet.
     */
    readonly description: string;
    /**
     * Options for DHCP client. The structure is documented below.
     */
    readonly dhcpOptions: outputs.GetVpcSubnetDhcpOption[];
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Labels to assign to this subnet.
     */
    readonly labels: {[key: string]: string};
    readonly name: string;
    /**
     * ID of the network this subnet belongs to.
     */
    readonly networkId: string;
    /**
     * ID of the route table to assign to this subnet.
     */
    readonly routeTableId: string;
    readonly subnetId: string;
    /**
     * The blocks of internal IPv4 addresses owned by this subnet.
     */
    readonly v4CidrBlocks: string[];
    /**
     * The blocks of internal IPv6 addresses owned by this subnet.
     */
    readonly v6CidrBlocks: string[];
    /**
     * Name of the availability zone for this subnet.
     */
    readonly zone: string;
}

export function getVpcSubnetOutput(args?: GetVpcSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcSubnetResult> {
    return pulumi.output(args).apply(a => getVpcSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getVpcSubnet.
 */
export interface GetVpcSubnetOutputArgs {
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * - Name of the subnet.
     */
    name?: pulumi.Input<string>;
    /**
     * Subnet ID.
     */
    subnetId?: pulumi.Input<string>;
}
