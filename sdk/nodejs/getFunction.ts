// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Cloud Function. For more information about Yandex Cloud Functions, see
 * [Yandex Cloud Functions](https://cloud.yandex.com/docs/functions/).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const myFunction = pulumi.output(yandex.getFunction({
 *     functionId: "are1samplefunction11",
 * }));
 * ```
 *
 * This data source is used to define [Yandex Cloud Function](https://cloud.yandex.com/docs/functions/concepts/function) that can be used by other resources.
 */
export function getFunction(args?: GetFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getFunction:getFunction", {
        "folderId": args.folderId,
        "functionId": args.functionId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunction.
 */
export interface GetFunctionArgs {
    /**
     * Folder ID for the Yandex Cloud Function
     */
    folderId?: string;
    /**
     * Yandex Cloud Function id used to define function
     */
    functionId?: string;
    /**
     * Yandex Cloud Function name used to define function
     */
    name?: string;
}

/**
 * A collection of values returned by getFunction.
 */
export interface GetFunctionResult {
    /**
     * Creation timestamp of the Yandex Cloud Function
     */
    readonly createdAt: string;
    /**
     * Description of the Yandex Cloud Function
     */
    readonly description: string;
    /**
     * Entrypoint for Yandex Cloud Function
     */
    readonly entrypoint: string;
    /**
     * A set of key/value environment variables for Yandex Cloud Function
     */
    readonly environment: {[key: string]: string};
    /**
     * Execution timeout in seconds for Yandex Cloud Function
     */
    readonly executionTimeout: string;
    readonly folderId?: string;
    readonly functionId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Image size for Yandex Cloud Function.
     */
    readonly imageSize: number;
    /**
     * A set of key/value label pairs to assign to the Yandex Cloud Function
     */
    readonly labels: {[key: string]: string};
    /**
     * Log group ID size for Yandex Cloud Function.
     */
    readonly loggroupId: string;
    /**
     * Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Function
     */
    readonly memory: number;
    readonly name?: string;
    /**
     * Runtime for Yandex Cloud Function
     */
    readonly runtime: string;
    /**
     * Service account ID for Yandex Cloud Function
     */
    readonly serviceAccountId: string;
    /**
     * Tags for Yandex Cloud Function. Tag "$latest" isn't returned.
     */
    readonly tags: string[];
    /**
     * Version for Yandex Cloud Function.
     */
    readonly version: string;
}

export function getFunctionOutput(args?: GetFunctionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionResult> {
    return pulumi.output(args).apply(a => getFunction(a, opts))
}

/**
 * A collection of arguments for invoking getFunction.
 */
export interface GetFunctionOutputArgs {
    /**
     * Folder ID for the Yandex Cloud Function
     */
    folderId?: pulumi.Input<string>;
    /**
     * Yandex Cloud Function id used to define function
     */
    functionId?: pulumi.Input<string>;
    /**
     * Yandex Cloud Function name used to define function
     */
    name?: pulumi.Input<string>;
}
