// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Allows management of a single SAML Federation within an existing Yandex.Cloud Organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const federation = new yandex.OrganizationmanagerSamlFederation("federation", {
 *     description: "My new SAML federation",
 *     issuer: "my-issuer",
 *     organizationId: "sdf4*********3fr",
 *     ssoBinding: "POST",
 *     ssoUrl: "https://my-sso.url",
 * });
 * ```
 *
 * ## Import
 *
 * A Yandex SAML Federation can be imported using the `id` of the resource, e.g.
 *
 * ```sh
 *  $ pulumi import yandex:index/organizationmanagerSamlFederation:OrganizationmanagerSamlFederation federation "federation_id"
 * ```
 */
export class OrganizationmanagerSamlFederation extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationmanagerSamlFederation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationmanagerSamlFederationState, opts?: pulumi.CustomResourceOptions): OrganizationmanagerSamlFederation {
        return new OrganizationmanagerSamlFederation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/organizationmanagerSamlFederation:OrganizationmanagerSamlFederation';

    /**
     * Returns true if the given object is an instance of OrganizationmanagerSamlFederation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationmanagerSamlFederation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationmanagerSamlFederation.__pulumiType;
    }

    /**
     * Add new users automatically on successful authentication. The user will get the `resource-manager.clouds.member` role automatically, but you need to grant other roles to them. If the value is `false`, users who aren't added to the cloud can't log in, even if they have authenticated on your server.
     */
    public readonly autoCreateAccountOnLogin!: pulumi.Output<boolean>;
    /**
     * Use case-insensitive name ids.
     */
    public readonly caseInsensitiveNameIds!: pulumi.Output<boolean>;
    /**
     * The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user immediately and redirects them to the home page. The default value is `8h`.
     */
    public readonly cookieMaxAge!: pulumi.Output<string>;
    /**
     * (Computed) The SAML Federation creation timestamp.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the SAML Federation.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user authenticates.
     */
    public readonly issuer!: pulumi.Output<string>;
    /**
     * A set of key/value label pairs assigned to the SAML Federation.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the SAML Federation.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The organization to attach this SAML Federation to.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Federation security settings, structure is documented below.
     */
    public readonly securitySettings!: pulumi.Output<outputs.OrganizationmanagerSamlFederationSecuritySettings>;
    /**
     * Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type. SAML Binding is a mapping of a SAML protocol message onto standard messaging formats and/or communications protocols.
     */
    public readonly ssoBinding!: pulumi.Output<string>;
    /**
     * Single sign-on endpoint URL. Specify the link to the IdP login page here.
     */
    public readonly ssoUrl!: pulumi.Output<string>;

    /**
     * Create a OrganizationmanagerSamlFederation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationmanagerSamlFederationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationmanagerSamlFederationArgs | OrganizationmanagerSamlFederationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationmanagerSamlFederationState | undefined;
            resourceInputs["autoCreateAccountOnLogin"] = state ? state.autoCreateAccountOnLogin : undefined;
            resourceInputs["caseInsensitiveNameIds"] = state ? state.caseInsensitiveNameIds : undefined;
            resourceInputs["cookieMaxAge"] = state ? state.cookieMaxAge : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["securitySettings"] = state ? state.securitySettings : undefined;
            resourceInputs["ssoBinding"] = state ? state.ssoBinding : undefined;
            resourceInputs["ssoUrl"] = state ? state.ssoUrl : undefined;
        } else {
            const args = argsOrState as OrganizationmanagerSamlFederationArgs | undefined;
            if ((!args || args.issuer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'issuer'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.ssoBinding === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ssoBinding'");
            }
            if ((!args || args.ssoUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ssoUrl'");
            }
            resourceInputs["autoCreateAccountOnLogin"] = args ? args.autoCreateAccountOnLogin : undefined;
            resourceInputs["caseInsensitiveNameIds"] = args ? args.caseInsensitiveNameIds : undefined;
            resourceInputs["cookieMaxAge"] = args ? args.cookieMaxAge : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["securitySettings"] = args ? args.securitySettings : undefined;
            resourceInputs["ssoBinding"] = args ? args.ssoBinding : undefined;
            resourceInputs["ssoUrl"] = args ? args.ssoUrl : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationmanagerSamlFederation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationmanagerSamlFederation resources.
 */
export interface OrganizationmanagerSamlFederationState {
    /**
     * Add new users automatically on successful authentication. The user will get the `resource-manager.clouds.member` role automatically, but you need to grant other roles to them. If the value is `false`, users who aren't added to the cloud can't log in, even if they have authenticated on your server.
     */
    autoCreateAccountOnLogin?: pulumi.Input<boolean>;
    /**
     * Use case-insensitive name ids.
     */
    caseInsensitiveNameIds?: pulumi.Input<boolean>;
    /**
     * The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user immediately and redirects them to the home page. The default value is `8h`.
     */
    cookieMaxAge?: pulumi.Input<string>;
    /**
     * (Computed) The SAML Federation creation timestamp.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the SAML Federation.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user authenticates.
     */
    issuer?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs assigned to the SAML Federation.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the SAML Federation.
     */
    name?: pulumi.Input<string>;
    /**
     * The organization to attach this SAML Federation to.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Federation security settings, structure is documented below.
     */
    securitySettings?: pulumi.Input<inputs.OrganizationmanagerSamlFederationSecuritySettings>;
    /**
     * Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type. SAML Binding is a mapping of a SAML protocol message onto standard messaging formats and/or communications protocols.
     */
    ssoBinding?: pulumi.Input<string>;
    /**
     * Single sign-on endpoint URL. Specify the link to the IdP login page here.
     */
    ssoUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationmanagerSamlFederation resource.
 */
export interface OrganizationmanagerSamlFederationArgs {
    /**
     * Add new users automatically on successful authentication. The user will get the `resource-manager.clouds.member` role automatically, but you need to grant other roles to them. If the value is `false`, users who aren't added to the cloud can't log in, even if they have authenticated on your server.
     */
    autoCreateAccountOnLogin?: pulumi.Input<boolean>;
    /**
     * Use case-insensitive name ids.
     */
    caseInsensitiveNameIds?: pulumi.Input<boolean>;
    /**
     * The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user immediately and redirects them to the home page. The default value is `8h`.
     */
    cookieMaxAge?: pulumi.Input<string>;
    /**
     * The description of the SAML Federation.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user authenticates.
     */
    issuer: pulumi.Input<string>;
    /**
     * A set of key/value label pairs assigned to the SAML Federation.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the SAML Federation.
     */
    name?: pulumi.Input<string>;
    /**
     * The organization to attach this SAML Federation to.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Federation security settings, structure is documented below.
     */
    securitySettings?: pulumi.Input<inputs.OrganizationmanagerSamlFederationSecuritySettings>;
    /**
     * Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type. SAML Binding is a mapping of a SAML protocol message onto standard messaging formats and/or communications protocols.
     */
    ssoBinding: pulumi.Input<string>;
    /**
     * Single sign-on endpoint URL. Specify the link to the IdP login page here.
     */
    ssoUrl: pulumi.Input<string>;
}
