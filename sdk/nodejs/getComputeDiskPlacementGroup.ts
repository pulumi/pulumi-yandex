// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information about a Yandex Compute Disk Placement group. For more information, see
 * [the official documentation](https://cloud.yandex.com/docs/compute/concepts/disk#nr-disks).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const myGroup = pulumi.output(yandex.getComputeDiskPlacementGroup({
 *     groupId: "some_group_id",
 * }));
 *
 * export const placementGroupName = myGroup.name!;
 * ```
 */
export function getComputeDiskPlacementGroup(args?: GetComputeDiskPlacementGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeDiskPlacementGroupResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("yandex:index/getComputeDiskPlacementGroup:getComputeDiskPlacementGroup", {
        "description": args.description,
        "folderId": args.folderId,
        "groupId": args.groupId,
        "labels": args.labels,
        "name": args.name,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeDiskPlacementGroup.
 */
export interface GetComputeDiskPlacementGroupArgs {
    /**
     * Description of the Disk Placement Group.
     */
    description?: string;
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: string;
    /**
     * The ID of a specific group.
     */
    groupId?: string;
    /**
     * A set of key/value label pairs assigned to the Disk Placement Group.
     */
    labels?: {[key: string]: string};
    /**
     * Name of the group.
     */
    name?: string;
    /**
     * ID of the zone where the Disk Placement Group resides.
     */
    zone?: string;
}

/**
 * A collection of values returned by getComputeDiskPlacementGroup.
 */
export interface GetComputeDiskPlacementGroupResult {
    /**
     * The creation timestamp of the Disk Placement Group.
     */
    readonly createdAt: string;
    /**
     * Description of the Disk Placement Group.
     */
    readonly description?: string;
    readonly folderId: string;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A set of key/value label pairs assigned to the Disk Placement Group.
     */
    readonly labels?: {[key: string]: string};
    readonly name?: string;
    /**
     * Status of the Disk Placement Group.
     */
    readonly status: string;
    /**
     * ID of the zone where the Disk Placement Group resides.
     */
    readonly zone?: string;
}

export function getComputeDiskPlacementGroupOutput(args?: GetComputeDiskPlacementGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeDiskPlacementGroupResult> {
    return pulumi.output(args).apply(a => getComputeDiskPlacementGroup(a, opts))
}

/**
 * A collection of arguments for invoking getComputeDiskPlacementGroup.
 */
export interface GetComputeDiskPlacementGroupOutputArgs {
    /**
     * Description of the Disk Placement Group.
     */
    description?: pulumi.Input<string>;
    /**
     * Folder that the resource belongs to. If value is omitted, the default provider folder is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * The ID of a specific group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs assigned to the Disk Placement Group.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the group.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the zone where the Disk Placement Group resides.
     */
    zone?: pulumi.Input<string>;
}
