// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Allows management of [Yandex.Cloud IoT Registry](https://cloud.yandex.com/docs/iot-core/quickstart).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const myRegistry = new yandex.IotCoreRegistry("my_registry", {
 *     certificates: [
 *         "public part of certificate1",
 *         "public part of certificate2",
 *     ],
 *     description: "any description",
 *     labels: {
 *         "my-label": "my-label-value",
 *     },
 *     passwords: [
 *         "my-password1",
 *         "my-password2",
 *     ],
 * });
 * ```
 */
export class IotCoreRegistry extends pulumi.CustomResource {
    /**
     * Get an existing IotCoreRegistry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotCoreRegistryState, opts?: pulumi.CustomResourceOptions): IotCoreRegistry {
        return new IotCoreRegistry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/iotCoreRegistry:IotCoreRegistry';

    /**
     * Returns true if the given object is an instance of IotCoreRegistry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotCoreRegistry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotCoreRegistry.__pulumiType;
    }

    /**
     * A set of certificate's fingerprints for the IoT Core Registry
     */
    public readonly certificates!: pulumi.Output<string[] | undefined>;
    /**
     * Creation timestamp of the IoT Core Registry
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Description of the IoT Core Registry
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Folder ID for the IoT Core Registry
     */
    public readonly folderId!: pulumi.Output<string>;
    /**
     * A set of key/value label pairs to assign to the IoT Core Registry.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * IoT Core Device name used to define registry
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A set of passwords's id for the IoT Core Registry
     */
    public readonly passwords!: pulumi.Output<string[] | undefined>;

    /**
     * Create a IotCoreRegistry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IotCoreRegistryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotCoreRegistryArgs | IotCoreRegistryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotCoreRegistryState | undefined;
            resourceInputs["certificates"] = state ? state.certificates : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
        } else {
            const args = argsOrState as IotCoreRegistryArgs | undefined;
            resourceInputs["certificates"] = args ? args.certificates : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwords"] = args ? args.passwords : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(IotCoreRegistry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IotCoreRegistry resources.
 */
export interface IotCoreRegistryState {
    /**
     * A set of certificate's fingerprints for the IoT Core Registry
     */
    certificates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Creation timestamp of the IoT Core Registry
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Description of the IoT Core Registry
     */
    description?: pulumi.Input<string>;
    /**
     * Folder ID for the IoT Core Registry
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the IoT Core Registry.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoT Core Device name used to define registry
     */
    name?: pulumi.Input<string>;
    /**
     * A set of passwords's id for the IoT Core Registry
     */
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a IotCoreRegistry resource.
 */
export interface IotCoreRegistryArgs {
    /**
     * A set of certificate's fingerprints for the IoT Core Registry
     */
    certificates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the IoT Core Registry
     */
    description?: pulumi.Input<string>;
    /**
     * Folder ID for the IoT Core Registry
     */
    folderId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the IoT Core Registry.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoT Core Device name used to define registry
     */
    name?: pulumi.Input<string>;
    /**
     * A set of passwords's id for the IoT Core Registry
     */
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
}
