// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Allows management of [Yandex.Cloud IAM service account authorized keys](https://cloud.yandex.com/docs/iam/concepts/authorization/key).
 * Generated pair of keys is used to create a [JSON Web Token](https://tools.ietf.org/html/rfc7519) which is necessary for requesting an [IAM Token](https://cloud.yandex.com/docs/iam/concepts/authorization/iam-token) for a [service account](https://cloud.yandex.com/docs/iam/concepts/users/service-accounts).
 *
 * ## Example Usage
 *
 * This snippet creates an authorized keys pair.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const sa_auth_key = new yandex.IamServiceAccountKey("sa-auth-key", {
 *     description: "key for service account",
 *     keyAlgorithm: "RSA_4096",
 *     pgpKey: "keybase:keybaseusername",
 *     serviceAccountId: "some_sa_id",
 * });
 * ```
 */
export class IamServiceAccountKey extends pulumi.CustomResource {
    /**
     * Get an existing IamServiceAccountKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamServiceAccountKeyState, opts?: pulumi.CustomResourceOptions): IamServiceAccountKey {
        return new IamServiceAccountKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/iamServiceAccountKey:IamServiceAccountKey';

    /**
     * Returns true if the given object is an instance of IamServiceAccountKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamServiceAccountKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamServiceAccountKey.__pulumiType;
    }

    /**
     * Creation timestamp of the static access key.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the key pair.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The encrypted private key, base64 encoded. This is only populated when `pgpKey` is supplied.
     */
    public /*out*/ readonly encryptedPrivateKey!: pulumi.Output<string>;
    /**
     * The output format of the keys. `PEM_FILE` is the default format.
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * The algorithm used to generate the key. `RSA_2048` is the default algorithm.
     * Valid values are listed in the [API reference](https://cloud.yandex.com/docs/iam/api-ref/Key).
     */
    public readonly keyAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * The fingerprint of the PGP key used to encrypt the private key. This is only populated when `pgpKey` is supplied.
     */
    public /*out*/ readonly keyFingerprint!: pulumi.Output<string>;
    /**
     * An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
     */
    public readonly pgpKey!: pulumi.Output<string | undefined>;
    /**
     * The private key. This is only populated when no `pgpKey` is provided.
     */
    public /*out*/ readonly privateKey!: pulumi.Output<string>;
    /**
     * The public key.
     */
    public /*out*/ readonly publicKey!: pulumi.Output<string>;
    /**
     * ID of the service account to create a pair for.
     */
    public readonly serviceAccountId!: pulumi.Output<string>;

    /**
     * Create a IamServiceAccountKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamServiceAccountKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamServiceAccountKeyArgs | IamServiceAccountKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamServiceAccountKeyState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["encryptedPrivateKey"] = state ? state.encryptedPrivateKey : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["keyAlgorithm"] = state ? state.keyAlgorithm : undefined;
            resourceInputs["keyFingerprint"] = state ? state.keyFingerprint : undefined;
            resourceInputs["pgpKey"] = state ? state.pgpKey : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["serviceAccountId"] = state ? state.serviceAccountId : undefined;
        } else {
            const args = argsOrState as IamServiceAccountKeyArgs | undefined;
            if ((!args || args.serviceAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["keyAlgorithm"] = args ? args.keyAlgorithm : undefined;
            resourceInputs["pgpKey"] = args ? args.pgpKey : undefined;
            resourceInputs["serviceAccountId"] = args ? args.serviceAccountId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["encryptedPrivateKey"] = undefined /*out*/;
            resourceInputs["keyFingerprint"] = undefined /*out*/;
            resourceInputs["privateKey"] = undefined /*out*/;
            resourceInputs["publicKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamServiceAccountKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IamServiceAccountKey resources.
 */
export interface IamServiceAccountKeyState {
    /**
     * Creation timestamp of the static access key.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the key pair.
     */
    description?: pulumi.Input<string>;
    /**
     * The encrypted private key, base64 encoded. This is only populated when `pgpKey` is supplied.
     */
    encryptedPrivateKey?: pulumi.Input<string>;
    /**
     * The output format of the keys. `PEM_FILE` is the default format.
     */
    format?: pulumi.Input<string>;
    /**
     * The algorithm used to generate the key. `RSA_2048` is the default algorithm.
     * Valid values are listed in the [API reference](https://cloud.yandex.com/docs/iam/api-ref/Key).
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The fingerprint of the PGP key used to encrypt the private key. This is only populated when `pgpKey` is supplied.
     */
    keyFingerprint?: pulumi.Input<string>;
    /**
     * An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
     */
    pgpKey?: pulumi.Input<string>;
    /**
     * The private key. This is only populated when no `pgpKey` is provided.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The public key.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * ID of the service account to create a pair for.
     */
    serviceAccountId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamServiceAccountKey resource.
 */
export interface IamServiceAccountKeyArgs {
    /**
     * The description of the key pair.
     */
    description?: pulumi.Input<string>;
    /**
     * The output format of the keys. `PEM_FILE` is the default format.
     */
    format?: pulumi.Input<string>;
    /**
     * The algorithm used to generate the key. `RSA_2048` is the default algorithm.
     * Valid values are listed in the [API reference](https://cloud.yandex.com/docs/iam/api-ref/Key).
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
     */
    pgpKey?: pulumi.Input<string>;
    /**
     * ID of the service account to create a pair for.
     */
    serviceAccountId: pulumi.Input<string>;
}
