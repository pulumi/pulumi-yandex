// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Yandex
{
    public static class GetMdbKafkaCluster
    {
        /// <summary>
        /// Get information about a Yandex Managed Kafka cluster. For more information, see
        /// [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Yandex.GetMdbKafkaCluster.InvokeAsync(new Yandex.GetMdbKafkaClusterArgs
        ///         {
        ///             Name = "test",
        ///         }));
        ///         this.NetworkId = foo.Apply(foo =&gt; foo.NetworkId);
        ///     }
        /// 
        ///     [Output("networkId")]
        ///     public Output&lt;string&gt; NetworkId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMdbKafkaClusterResult> InvokeAsync(GetMdbKafkaClusterArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMdbKafkaClusterResult>("yandex:index/getMdbKafkaCluster:getMdbKafkaCluster", args ?? new GetMdbKafkaClusterArgs(), options.WithVersion());

        /// <summary>
        /// Get information about a Yandex Managed Kafka cluster. For more information, see
        /// [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Yandex = Pulumi.Yandex;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Yandex.GetMdbKafkaCluster.InvokeAsync(new Yandex.GetMdbKafkaClusterArgs
        ///         {
        ///             Name = "test",
        ///         }));
        ///         this.NetworkId = foo.Apply(foo =&gt; foo.NetworkId);
        ///     }
        /// 
        ///     [Output("networkId")]
        ///     public Output&lt;string&gt; NetworkId { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetMdbKafkaClusterResult> Invoke(GetMdbKafkaClusterInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMdbKafkaClusterResult>("yandex:index/getMdbKafkaCluster:getMdbKafkaCluster", args ?? new GetMdbKafkaClusterInvokeArgs(), options.WithVersion());
    }


    public sealed class GetMdbKafkaClusterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        /// <summary>
        /// Configuration of the Kafka cluster. The structure is documented below.
        /// </summary>
        [Input("config")]
        public Inputs.GetMdbKafkaClusterConfigArgs? Config { get; set; }

        [Input("deletionProtection")]
        public bool? DeletionProtection { get; set; }

        /// <summary>
        /// The ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The name of the Kafka cluster.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("subnetIds")]
        private List<string>? _subnetIds;
        public List<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new List<string>());
            set => _subnetIds = value;
        }

        [Input("topics")]
        private List<Inputs.GetMdbKafkaClusterTopicArgs>? _topics;

        /// <summary>
        /// A topic of the Kafka cluster. The structure is documented below.
        /// </summary>
        public List<Inputs.GetMdbKafkaClusterTopicArgs> Topics
        {
            get => _topics ?? (_topics = new List<Inputs.GetMdbKafkaClusterTopicArgs>());
            set => _topics = value;
        }

        [Input("users")]
        private List<Inputs.GetMdbKafkaClusterUserArgs>? _users;

        /// <summary>
        /// A user of the Kafka cluster. The structure is documented below.
        /// </summary>
        public List<Inputs.GetMdbKafkaClusterUserArgs> Users
        {
            get => _users ?? (_users = new List<Inputs.GetMdbKafkaClusterUserArgs>());
            set => _users = value;
        }

        public GetMdbKafkaClusterArgs()
        {
        }
    }

    public sealed class GetMdbKafkaClusterInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Configuration of the Kafka cluster. The structure is documented below.
        /// </summary>
        [Input("config")]
        public Input<Inputs.GetMdbKafkaClusterConfigInputArgs>? Config { get; set; }

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// The ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The name of the Kafka cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("topics")]
        private InputList<Inputs.GetMdbKafkaClusterTopicInputArgs>? _topics;

        /// <summary>
        /// A topic of the Kafka cluster. The structure is documented below.
        /// </summary>
        public InputList<Inputs.GetMdbKafkaClusterTopicInputArgs> Topics
        {
            get => _topics ?? (_topics = new InputList<Inputs.GetMdbKafkaClusterTopicInputArgs>());
            set => _topics = value;
        }

        [Input("users")]
        private InputList<Inputs.GetMdbKafkaClusterUserInputArgs>? _users;

        /// <summary>
        /// A user of the Kafka cluster. The structure is documented below.
        /// </summary>
        public InputList<Inputs.GetMdbKafkaClusterUserInputArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.GetMdbKafkaClusterUserInputArgs>());
            set => _users = value;
        }

        public GetMdbKafkaClusterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMdbKafkaClusterResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// Configuration of the Kafka cluster. The structure is documented below.
        /// </summary>
        public readonly Outputs.GetMdbKafkaClusterConfigResult? Config;
        /// <summary>
        /// Creation timestamp of the key.
        /// </summary>
        public readonly string CreatedAt;
        public readonly bool DeletionProtection;
        /// <summary>
        /// Description of the Kafka cluster.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Deployment environment of the Kafka cluster.
        /// </summary>
        public readonly string Environment;
        public readonly string FolderId;
        /// <summary>
        /// Health of the host.
        /// </summary>
        public readonly string Health;
        /// <summary>
        /// A list of IDs of the host groups hosting VMs of the cluster.
        /// </summary>
        public readonly ImmutableArray<string> HostGroupIds;
        /// <summary>
        /// A host of the Kafka cluster. The structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterHostResult> Hosts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A set of key/value label pairs to assign to the Kafka cluster.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Maintenance window settings of the Kafka cluster. The structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterMaintenanceWindowResult> MaintenanceWindows;
        /// <summary>
        /// The fully qualified domain name of the host.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// ID of the network, to which the Kafka cluster belongs.
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// A list of security groups IDs of the Kafka cluster.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// Status of the cluster.
        /// </summary>
        public readonly string Status;
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// A topic of the Kafka cluster. The structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterTopicResult> Topics;
        /// <summary>
        /// A user of the Kafka cluster. The structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaClusterUserResult> Users;

        [OutputConstructor]
        private GetMdbKafkaClusterResult(
            string clusterId,

            Outputs.GetMdbKafkaClusterConfigResult? config,

            string createdAt,

            bool deletionProtection,

            string description,

            string environment,

            string folderId,

            string health,

            ImmutableArray<string> hostGroupIds,

            ImmutableArray<Outputs.GetMdbKafkaClusterHostResult> hosts,

            string id,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetMdbKafkaClusterMaintenanceWindowResult> maintenanceWindows,

            string name,

            string networkId,

            ImmutableArray<string> securityGroupIds,

            string status,

            ImmutableArray<string> subnetIds,

            ImmutableArray<Outputs.GetMdbKafkaClusterTopicResult> topics,

            ImmutableArray<Outputs.GetMdbKafkaClusterUserResult> users)
        {
            ClusterId = clusterId;
            Config = config;
            CreatedAt = createdAt;
            DeletionProtection = deletionProtection;
            Description = description;
            Environment = environment;
            FolderId = folderId;
            Health = health;
            HostGroupIds = hostGroupIds;
            Hosts = hosts;
            Id = id;
            Labels = labels;
            MaintenanceWindows = maintenanceWindows;
            Name = name;
            NetworkId = networkId;
            SecurityGroupIds = securityGroupIds;
            Status = status;
            SubnetIds = subnetIds;
            Topics = topics;
            Users = users;
        }
    }
}
