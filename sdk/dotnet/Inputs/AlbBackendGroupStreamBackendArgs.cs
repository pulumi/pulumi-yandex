// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class AlbBackendGroupStreamBackendArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Healthcheck specification that will be used by this backend. Structure is documented below.
        /// </summary>
        [Input("healthcheck")]
        public Input<Inputs.AlbBackendGroupStreamBackendHealthcheckArgs>? Healthcheck { get; set; }

        /// <summary>
        /// Load Balancing Config specification that will be used by this backend. Structure is documented below.
        /// </summary>
        [Input("loadBalancingConfig")]
        public Input<Inputs.AlbBackendGroupStreamBackendLoadBalancingConfigArgs>? LoadBalancingConfig { get; set; }

        /// <summary>
        /// Name of the backend.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Port for incoming traffic.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("targetGroupIds", required: true)]
        private InputList<string>? _targetGroupIds;

        /// <summary>
        /// References target groups for the backend.
        /// </summary>
        public InputList<string> TargetGroupIds
        {
            get => _targetGroupIds ?? (_targetGroupIds = new InputList<string>());
            set => _targetGroupIds = value;
        }

        /// <summary>
        /// Tls specification that will be used by this backend. Structure is documented below.
        /// </summary>
        [Input("tls")]
        public Input<Inputs.AlbBackendGroupStreamBackendTlsArgs>? Tls { get; set; }

        /// <summary>
        /// Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public AlbBackendGroupStreamBackendArgs()
        {
        }
    }
}
