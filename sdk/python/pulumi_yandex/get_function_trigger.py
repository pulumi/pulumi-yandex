# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetFunctionTriggerResult',
    'AwaitableGetFunctionTriggerResult',
    'get_function_trigger',
    'get_function_trigger_output',
]

@pulumi.output_type
class GetFunctionTriggerResult:
    """
    A collection of values returned by getFunctionTrigger.
    """
    def __init__(__self__, created_at=None, description=None, dlqs=None, folder_id=None, functions=None, id=None, iots=None, labels=None, log_groups=None, loggings=None, message_queues=None, name=None, object_storages=None, timers=None, trigger_id=None):
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if dlqs and not isinstance(dlqs, list):
            raise TypeError("Expected argument 'dlqs' to be a list")
        pulumi.set(__self__, "dlqs", dlqs)
        if folder_id and not isinstance(folder_id, str):
            raise TypeError("Expected argument 'folder_id' to be a str")
        pulumi.set(__self__, "folder_id", folder_id)
        if functions and not isinstance(functions, list):
            raise TypeError("Expected argument 'functions' to be a list")
        pulumi.set(__self__, "functions", functions)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if iots and not isinstance(iots, list):
            raise TypeError("Expected argument 'iots' to be a list")
        pulumi.set(__self__, "iots", iots)
        if labels and not isinstance(labels, dict):
            raise TypeError("Expected argument 'labels' to be a dict")
        pulumi.set(__self__, "labels", labels)
        if log_groups and not isinstance(log_groups, list):
            raise TypeError("Expected argument 'log_groups' to be a list")
        pulumi.set(__self__, "log_groups", log_groups)
        if loggings and not isinstance(loggings, list):
            raise TypeError("Expected argument 'loggings' to be a list")
        pulumi.set(__self__, "loggings", loggings)
        if message_queues and not isinstance(message_queues, list):
            raise TypeError("Expected argument 'message_queues' to be a list")
        pulumi.set(__self__, "message_queues", message_queues)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if object_storages and not isinstance(object_storages, list):
            raise TypeError("Expected argument 'object_storages' to be a list")
        pulumi.set(__self__, "object_storages", object_storages)
        if timers and not isinstance(timers, list):
            raise TypeError("Expected argument 'timers' to be a list")
        pulumi.set(__self__, "timers", timers)
        if trigger_id and not isinstance(trigger_id, str):
            raise TypeError("Expected argument 'trigger_id' to be a str")
        pulumi.set(__self__, "trigger_id", trigger_id)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> str:
        """
        Creation timestamp of the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Description of the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def dlqs(self) -> Sequence['outputs.GetFunctionTriggerDlqResult']:
        """
        Dead Letter Queue settings definition for Yandex Cloud Functions Trigger
        * `dlq.0.queue_id` - ID of Dead Letter Queue for Trigger (Queue ARN)
        * `dlq.0.service_account_id` - Service Account ID for Dead Letter Queue for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "dlqs")

    @property
    @pulumi.getter(name="folderId")
    def folder_id(self) -> Optional[str]:
        """
        Folder ID for the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "folder_id")

    @property
    @pulumi.getter
    def functions(self) -> Sequence['outputs.GetFunctionTriggerFunctionResult']:
        """
        [Yandex.Cloud Function](https://cloud.yandex.com/docs/functions/concepts/function) settings definition for Yandex Cloud Functions Trigger
        * `function.0.id` - Yandex.Cloud Function ID for Yandex Cloud Functions Trigger
        * `function.0.service_account_id` - Service account ID for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        * `function.0.tag` - Tag for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        * `function.0.retry_attempts` - Retry attempts for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        * `function.0.retry_interval` - Retry interval in seconds for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "functions")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def iots(self) -> Sequence['outputs.GetFunctionTriggerIotResult']:
        """
        [IoT](https://cloud.yandex.com/docs/functions/concepts/trigger/iot-core-trigger) settings definition for Yandex Cloud Functions Trigger, if present
        * `iot.0.registry_id` - IoT Registry ID for Yandex Cloud Functions Trigger
        * `iot.0.device_id` - IoT Device ID for Yandex Cloud Functions Trigger
        * `iot.0.topic` - IoT Topic for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "iots")

    @property
    @pulumi.getter
    def labels(self) -> Mapping[str, str]:
        """
        A set of key/value label pairs to assign to the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter(name="logGroups")
    def log_groups(self) -> Sequence['outputs.GetFunctionTriggerLogGroupResult']:
        return pulumi.get(self, "log_groups")

    @property
    @pulumi.getter
    def loggings(self) -> Sequence['outputs.GetFunctionTriggerLoggingResult']:
        return pulumi.get(self, "loggings")

    @property
    @pulumi.getter(name="messageQueues")
    def message_queues(self) -> Sequence['outputs.GetFunctionTriggerMessageQueueResult']:
        """
        [Message Queue](https://cloud.yandex.com/docs/functions/concepts/trigger/ymq-trigger) settings definition for Yandex Cloud Functions Trigger, if present
        * `message_queue.0.queue_id` - Message Queue ID for Yandex Cloud Functions Trigger
        * `message_queue.0.service_account_id` - Message Queue Service Account ID for Yandex Cloud Functions Trigger
        * `message_queue.0.batch_cutoff` - Batch Duration in seconds for Yandex Cloud Functions Trigger
        * `message_queue.0.batch_size` - Batch Size for Yandex Cloud Functions Trigger
        * `message_queue.0.visibility_timeout` - Visibility timeout for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "message_queues")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="objectStorages")
    def object_storages(self) -> Sequence['outputs.GetFunctionTriggerObjectStorageResult']:
        """
        [Object Storage](https://cloud.yandex.com/docs/functions/concepts/trigger/os-trigger) settings definition for Yandex Cloud Functions Trigger, if present
        * `object_storage.0.bucket_id` - Object Storage Bucket ID for Yandex Cloud Functions Trigger
        * `object_storage.0.prefix` - Prefix for Object Storage for Yandex Cloud Functions Trigger
        * `object_storage.0.suffix` - Suffix for Object Storage for Yandex Cloud Functions Trigger
        * `object_storage.0.create` - Boolean flag for setting create event for Yandex Cloud Functions Trigger
        * `object_storage.0.update` - Boolean flag for setting update event for Yandex Cloud Functions Trigger
        * `object_storage.0.delete` - Boolean flag for setting delete event for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "object_storages")

    @property
    @pulumi.getter
    def timers(self) -> Sequence['outputs.GetFunctionTriggerTimerResult']:
        """
        [Timer](https://cloud.yandex.com/docs/functions/concepts/trigger/timer) settings definition for Yandex Cloud Functions Trigger, if present
        * `timer.0.cron_expression` - Cron expression for timer for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "timers")

    @property
    @pulumi.getter(name="triggerId")
    def trigger_id(self) -> Optional[str]:
        return pulumi.get(self, "trigger_id")


class AwaitableGetFunctionTriggerResult(GetFunctionTriggerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFunctionTriggerResult(
            created_at=self.created_at,
            description=self.description,
            dlqs=self.dlqs,
            folder_id=self.folder_id,
            functions=self.functions,
            id=self.id,
            iots=self.iots,
            labels=self.labels,
            log_groups=self.log_groups,
            loggings=self.loggings,
            message_queues=self.message_queues,
            name=self.name,
            object_storages=self.object_storages,
            timers=self.timers,
            trigger_id=self.trigger_id)


def get_function_trigger(folder_id: Optional[str] = None,
                         name: Optional[str] = None,
                         trigger_id: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFunctionTriggerResult:
    """
    Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see
    [Yandex Cloud Functions](https://cloud.yandex.com/docs/functions/).

    ```python
    import pulumi
    import pulumi_yandex as yandex

    my_trigger = yandex.get_function_trigger(trigger_id="are1sampletrigger11")
    ```

    This data source is used to define [Yandex Cloud Functions Trigger](https://cloud.yandex.com/docs/functions/concepts/trigger) that can be used by other resources.


    :param str folder_id: Folder ID for the Yandex Cloud Functions Trigger
    :param str name: Yandex Cloud Functions Trigger name used to define trigger
    :param str trigger_id: Yandex Cloud Functions Trigger id used to define trigger
    """
    __args__ = dict()
    __args__['folderId'] = folder_id
    __args__['name'] = name
    __args__['triggerId'] = trigger_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('yandex:index/getFunctionTrigger:getFunctionTrigger', __args__, opts=opts, typ=GetFunctionTriggerResult).value

    return AwaitableGetFunctionTriggerResult(
        created_at=__ret__.created_at,
        description=__ret__.description,
        dlqs=__ret__.dlqs,
        folder_id=__ret__.folder_id,
        functions=__ret__.functions,
        id=__ret__.id,
        iots=__ret__.iots,
        labels=__ret__.labels,
        log_groups=__ret__.log_groups,
        loggings=__ret__.loggings,
        message_queues=__ret__.message_queues,
        name=__ret__.name,
        object_storages=__ret__.object_storages,
        timers=__ret__.timers,
        trigger_id=__ret__.trigger_id)


@_utilities.lift_output_func(get_function_trigger)
def get_function_trigger_output(folder_id: Optional[pulumi.Input[Optional[str]]] = None,
                                name: Optional[pulumi.Input[Optional[str]]] = None,
                                trigger_id: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFunctionTriggerResult]:
    """
    Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see
    [Yandex Cloud Functions](https://cloud.yandex.com/docs/functions/).

    ```python
    import pulumi
    import pulumi_yandex as yandex

    my_trigger = yandex.get_function_trigger(trigger_id="are1sampletrigger11")
    ```

    This data source is used to define [Yandex Cloud Functions Trigger](https://cloud.yandex.com/docs/functions/concepts/trigger) that can be used by other resources.


    :param str folder_id: Folder ID for the Yandex Cloud Functions Trigger
    :param str name: Yandex Cloud Functions Trigger name used to define trigger
    :param str trigger_id: Yandex Cloud Functions Trigger id used to define trigger
    """
    ...
